openapi: 3.0.3
info:
  title: Redmine OpenAPI Specification
  version: 6.0.0
servers:
  - url: http://127.0.0.1:3000
security:
  - ApiKeyHeaderAuth: []
  - ApiKeyQueryAuth: []
  - BasicAuth: []
tags:
  - name: attachments
    description: attachments_controller's API
  - name: custom_fields
    description: custom_fields_controller's API
  - name: enumerations
    description: enumerations_controller's API
  - name: files
    description: files_controller's API
  - name: gantts
    description: gantts_controller's API
  - name: groups
    description: groups_controller's API
  - name: issues
    description: issues_controller's API
  - name: issue_categories
    description: issue_categories_controller's API
  - name: issue_relations
    description: issue_relations_controller's API
  - name: issue_statuses
    description: issue_statuses_controller's API
  - name: journals
    description: journals_controller's API
  - name: members
    description: members_controller's API
  - name: my
    description: my_controller's API
  - name: news
    description: news_controller's API
  - name: projects
    description: projects_controller's API
  - name: queries
    description: queries_controller's API
  - name: repositories
    description: repositories_controller's API
  - name: roles
    description: roles_controller's API
  - name: search
    description: search_controller's API
  - name: timelog
    description: timelog_controller's API
  - name: trackers
    description: trackers_controller's API
  - name: users
    description: users_controller's API
  - name: versions
    description: versions_controller's API
  - name: watchers
    description: watchers_controller's API
  - name: wiki
    description: wiki_controller's API
paths:
  /attachments/download/{id}:
    get:
      tags:
        - attachments
      description: |
        Download the attachment with the specified ID.
      operationId: attachments#download
      parameters:
        - name: id
          in: path
          description: The ID of the attachment.
          required: true
          schema: &ref_0
            type: integer
      responses:
        '200':
          description: Returns a single attachment object in raw format.
          content: &ref_1
            '*/*':
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: &ref_2
          type: string
  /attachments/thumbnail/{id}:
    get:
      tags:
        - attachments
      description: |
        Download the thumbnail of the attachment with the specified ID.
      operationId: attachments#thumbnail
      parameters:
        - name: id
          in: path
          description: The ID of the attachment.
          required: true
          schema: *ref_0
      responses:
        '200':
          description: Returns a single attachment object in raw format.
          content: *ref_1
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /attachments/thumbnail/{id}/{size}:
    get:
      tags:
        - attachments
      description: |
        Downloads the attachment thumbnail with the specified ID.
      operationId: attachments#thumbnail-size
      parameters:
        - name: id
          in: path
          description: The ID of the attachment.
          required: true
          schema: *ref_0
        - name: size
          in: path
          description: The size of the attachment.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns a single attachment object in raw format.
          content: *ref_1
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /attachments/{id}.json:
    get:
      tags:
        - attachments
      description: |
        Returns the attachment with the specified ID.
      operationId: attachments#show
      parameters:
        - name: id
          in: path
          description: The ID of the attachment.
          required: true
          schema: *ref_0
      responses:
        '200':
          description: Returns a single attachment object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  attachment:
                    type: object
                    properties: &ref_15
                      id:
                        type: integer
                        description: The ID of the attachment.
                      filename:
                        type: string
                        description: The filename of the attachment.
                      filesize:
                        type: integer
                        description: The filesize of the attachment.
                      content_type:
                        type: string
                        description: The content type of the attachment.
                      description:
                        type: string
                        description: The description of the attachment.
                      content_url:
                        type: string
                        description: The content URL of the attachment.
                      thumbnail_url:
                        type: string
                        description: The thumbnail URL of the attachment.
                      author:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the author.
                          name:
                            type: string
                            description: The name of the author.
                      created_on:
                        type: string
                        format: date-time
                        description: The date and time when the attachment was created.
                    additionalProperties: true
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    patch:
      tags:
        - attachments
      description: |
        Updates the attachment with the specified ID.
      operationId: attachments#update-patch
      parameters:
        - name: id
          in: path
          description: The ID of the attachment.
          required: true
          schema: *ref_0
      requestBody:
        description: The attachment object to update.
        content: &ref_3
          application/json:
            schema:
              type: object
              properties:
                attachment:
                  type: object
                  properties:
                    filename:
                      type: string
                      description: The filename of the attachment.
                    content_type:
                      type: string
                      description: The content type of the attachment.
                    description:
                      type: string
                      description: The description of the attachment.
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: &ref_4
            application/json:
              schema:
                description: |
                  A list of errors that occurred during the request.
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
    put:
      tags:
        - attachments
      description: |
        Updates the attachment with the specified ID.
      operationId: attachments#update-put
      parameters:
        - name: id
          in: path
          description: The ID of the attachment.
          required: true
          schema: *ref_0
      requestBody:
        description: The attachment object to update.
        content: *ref_3
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    delete:
      tags:
        - attachments
      description: |
        Deletes the attachment with the specified ID.
      operationId: attachments#destroy
      parameters:
        - name: id
          in: path
          description: The ID of the attachment.
          required: true
          schema: *ref_0
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /attachments/{object_type}/{object_id}/download.zip:
    get:
      tags:
        - attachments
      description: |
        Downloads the attachment with the specified ID.
      operationId: attachments#download_all
      parameters:
        - name: object_type
          in: path
          description: The object type of the attachment.
          required: true
          schema:
            type: string
        - name: object_id
          in: path
          description: The object ID of the attachment.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns a single attachment as a ZIP file.
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /custom_fields.json:
    get:
      tags:
        - custom_fields
      description: Returns all custom field definitions.
      operationId: custom_fields#index
      responses:
        '200':
          description: |
            Returns a list of custom fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  custom_fields:
                    type: array
                    items:
                      description: |
                        Represents a single custom field.
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The unique identifier of the custom field.
                        name:
                          type: string
                          description: The name of the custom field.
                        description:
                          type: string
                          description: A description of the custom field.
                        customized_type:
                          type: string
                          description: The type of object this custom field is associated with.
                        field_format:
                          type: string
                          description: |
                            The format of the custom field.
                            Possible values are:
                            - `string`
                            - `text`
                            - `link`
                            - `int`
                            - `float`
                            - `date`
                            - `list`
                            - `bool`
                            - `enumeration`
                            - `user`
                            - `version`
                            - `attachement`
                        regexp:
                          type: string
                          description: The regular expression pattern for the custom field value.
                        min_length:
                          type: integer
                          description: The minimum length allowed for the custom field value.
                        max_length:
                          type: integer
                          description: The maximum length allowed for the custom field value.
                        is_required:
                          type: boolean
                          description: Whether the custom field is required.
                        is_filter:
                          type: boolean
                          description: Whether the custom field can be used as a filter.
                        searchable:
                          type: boolean
                          description: Whether the custom field is searchable.
                        multiple:
                          type: boolean
                          description: Whether the custom field allows multiple values.
                        default_value:
                          type: string
                          description: The default value for the custom field.
                        visible:
                          type: boolean
                          description: Whether the custom field is visible.
                        editable:
                          type: boolean
                          description: The editable of the custom field.
                        possible_values:
                          type: array
                          description: The possible values of the custom field.
                          items:
                            type: object
                            properties:
                              value:
                                type: string
                                description: The value of the possible value.
                              label:
                                type: string
                                description: The label of the possible value.
                        trackers:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The id of the tracker.
                              name:
                                type: string
                                description: The name of the tracker.
                        roles:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The id of the role.
                              name:
                                type: string
                                description: The name of the role.
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /enumerations/document_categories.json:
    get:
      tags:
        - enumerations
      description: Returns a list of document categories.
      operationId: enumerations#index-document-category
      responses:
        '200':
          description: |
            Returns a list of enumeration values.
          content:
            application/json:
              schema:
                type: object
                properties:
                  document_categories:
                    type: array
                    items:
                      description: |
                        Represents a single enumeration value.
                      type: object
                      properties: &ref_5
                        id:
                          type: integer
                          description: The unique identifier of the enumeration.
                        name:
                          type: string
                          description: The name of the enumeration.
                        is_default:
                          type: boolean
                          description: The default of the enumeration.
                        active:
                          type: boolean
                          description: The active of the enumeration.
                        custom_fields:
                          type: array
                          items:
                            type: object
                            properties: &ref_6
                              id:
                                type: integer
                                description: The ID of the custom field.
                              name:
                                type: string
                                description: The name of the custom field.
                              multiple:
                                type: boolean
                                description: Whether the custom field can have multiple values.
                              value: {}
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /enumerations/issue_priorities.json:
    get:
      tags:
        - enumerations
      description: Returns a list of issue priorities.
      operationId: enumerations#index-issue-priority
      responses:
        '200':
          description: |
            Returns a list of enumerations.
          content:
            application/json:
              schema:
                type: object
                properties:
                  issue_priorities:
                    type: array
                    items:
                      description: |
                        Represents a single enumeration value.
                      type: object
                      properties: *ref_5
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /enumerations/time_entry_activities.json:
    get:
      tags:
        - enumerations
      description: Returns a list of time entry activities.
      operationId: enumerations#index-time-entry-activity
      responses:
        '200':
          description: |
            Returns a list of enumerations.
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_entry_activities:
                    type: array
                    items:
                      description: |
                        Represents a single enumeration value.
                      type: object
                      properties: *ref_5
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /groups.json:
    get:
      tags:
        - groups
      description: Returns a list of all groups.
      operationId: groups#index
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: &ref_11
            type: integer
            enum:
              - 1
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: &ref_12
            type: object
            properties:
              offset:
                type: integer
                description: |
                  The offset of the first object to retrieve
                  If not specified, it defaults to 0.
                default: 0
              limit:
                type: integer
                description: |
                  The number of items to be present in the response.
                  If not specified, it defaults to 25.
                default: 25
                maximum: 100
              nometa:
                type: integer
                description: |
                  If set to 1, the response will not include pagination information.
                enum:
                  - 1
      responses:
        '200':
          description: |
            Returns a list of groups.
          content:
            application/json:
              schema:
                type: object
                properties:
                  groups:
                    type: array
                    items:
                      description: |
                        A single group.
                      type: object
                      properties: &ref_7
                        id:
                          type: integer
                          description: The ID of the group.
                        name:
                          type: string
                          description: The name of the group.
                        builtin:
                          type: string
                          description: The builtin type of the group.
                        custom_fields:
                          type: array
                          items:
                            type: object
                            properties: *ref_6
        '401':
          description: not provided
        '403':
          description: not provided
    post:
      tags:
        - groups
      description: Creates a new group.
      operationId: groups#create
      requestBody:
        description: |
          The group to create or update.
        content: &ref_10
          application/json:
            schema:
              type: object
              properties:
                group:
                  description: |
                    A single group.
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the group.
                    twofa_required:
                      type: boolean
                      description: The 2FA required of the group.
                    user_ids:
                      type: array
                      description: The user id of the group.
                      items:
                        type: integer
                    custom_field_values:
                      type: object
                      description: |
                        The values of the custom fields.
                      additionalProperties: true
                    custom_fields:
                      type: array
                      items:
                        type: object
                        properties: *ref_6
        required: true
      responses:
        '201':
          description: |
            Returns the group with the specified ID.
          content: &ref_8
            application/json:
              schema:
                type: object
                properties:
                  group:
                    description: |
                      A single group.
                    allOf: &ref_97
                      - description: |
                          A single group.
                        type: object
                        properties: *ref_7
                      - type: object
                        properties:
                          users:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the user.
                                name:
                                  type: string
                                  description: The name of the user.
                          memberships:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the mebership.
                                project:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the project.
                                    name:
                                      type: string
                                      description: The name of the project.
                                roles:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the role.
                                      name:
                                        type: string
                                        description: The name of the role.
                                      inherited:
                                        type: boolean
                                        description: Whether the role is inherited from a parent project.
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /groups/{id}.json:
    get:
      tags:
        - groups
      description: |
        Returns the group with the specified ID.
      operationId: groups#show
      parameters:
        - name: id
          in: path
          description: |
            The ID of the group.
          required: true
          schema: &ref_9
            type: integer
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `users`, `memberships`.
          schema:
            type: array
            items:
              type: string
              enum:
                - users
                - memberships
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the group with the specified ID.
          content: *ref_8
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    patch:
      tags:
        - groups
      description: |
        Updates the group with the specified ID.
      operationId: groups#update-patch
      parameters:
        - name: id
          in: path
          description: |
            The ID of the group.
          required: true
          schema: *ref_9
      requestBody:
        description: |
          The group to create or update.
        content: *ref_10
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - groups
      description: |
        Updates the group with the specified ID.
      operationId: groups#update-put
      parameters:
        - name: id
          in: path
          description: |
            The ID of the group.
          required: true
          schema: *ref_9
      requestBody:
        description: |
          The group to create or update.
        content: *ref_10
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    delete:
      tags:
        - groups
      description: |
        Deletes the group with the specified ID.
      operationId: groups#destroy
      parameters:
        - name: id
          in: path
          description: |
            The ID of the group.
          required: true
          schema: *ref_9
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /groups/{id}/users.json:
    post:
      tags:
        - groups
      description: Adds an existing user to a group.
      operationId: groups#add_users
      parameters:
        - name: id
          in: path
          description: |
            The ID of the group.
          required: true
          schema: *ref_9
      requestBody:
        description: |
          The user ID list.
        content:
          application/json:
            schema:
              type: object
              properties:
                user_ids:
                  type: array
                  items:
                    type: integer
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /groups/{id}/users/{user_id}.json:
    delete:
      tags:
        - groups
      description: Removes a user from a group.
      operationId: groups#remove_user
      parameters:
        - name: id
          in: path
          description: |
            The ID of the group.
          required: true
          schema: *ref_9
        - name: user_id
          in: path
          description: |
            The ID of the user.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issues.csv:
    get:
      tags:
        - issues
      description: Returns a paginated list of issues. By default, it returns open issues only.
      operationId: issues#index-csv
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: query
          in: query
          schema: &ref_13
            type: object
            properties:
              status_id:
                type: string
                description: |
                  The expression of status id of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              project_id:
                type: string
                description: |
                  The expression of project ID or identifier of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              tracker_id:
                type: string
                description: |
                  The expression of tracker id of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              priority_id:
                type: string
                description: |
                  The expression of priority id of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              author_id:
                type: string
                description: |
                  The expression of author id of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              author.group:
                type: string
                description: |
                  The expression of author group of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              author.role:
                type: string
                description: |
                  The expression of author role of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              assigned_to_id:
                type: string
                description: |
                  The expression of assigned to id of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              member_of_group:
                type: string
                description: |
                  The expression of member of group of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              assigned_to_role:
                type: string
                description: |
                  The expression of assigned to role of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              fixed_version_id:
                type: string
                description: |
                  The expression of fixed version id of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              fixed_version.due_date:
                type: string
                description: |
                  The expression of fixed version due date of the issue.
                  The expression format is "[operator]\<value>".
                  examples:
                  - last week : `lw`
                  - before "2025/7/12": `<=2025-07-12`
              fixed_version.status:
                type: string
                description: |
                  The expression of fixed version status of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              category_id:
                type: string
                description: |
                  The expression of category id of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              subject:
                type: string
                description: |
                  The expression of subject of the issue.
                  The expression format is "\<operator>\<value>".
              description:
                type: string
                description: |
                  The expression of description of the issue.
                  The expression format is "\<operator>\<value>".
              notes:
                type: string
                description: |
                  The expression of notes of the issue.
                  The expression format is "\<operator>\<value>".
              created_on:
                type: string
                description: |
                  The expression of created_on of the issue.
                  The expression format is "[operator]\<value>".
                  examples:
                  - last week : `lw`
                  - before "2025/7/12": `<=2025-07-12`
              updated_on:
                type: string
                description: |
                  The expression of updated_on of the issue.
                  The expression format is "[operator]\<value>".
                  examples:
                  - last week : `lw`
                  - before "2025/7/12": `<=2025-07-12`
              closed_on:
                type: string
                description: |
                  The expression of closed_on of the issue.
                  The expression format is "[operator]\<value>".
                  examples:
                  - last week : `lw`
                  - before "2025/7/12": `<=2025-07-12`
              start_date:
                type: string
                description: |
                  The expression of start date of the issue.
                  The expression format is "[operator]\<value>".
                  examples:
                  - last week : `lw`
                  - before "2025/7/12": `<=2025-07-12`
              due_date:
                type: string
                description: |
                  The expression of due date of the issue.
                  The expression format is "[operator]\<value>".
                  examples:
                  - last week : `lw`
                  - before "2025/7/12": `<=2025-07-12`
              estimated_hours:
                type: string
                description: |
                  The expression of estimated hours of the issue.
                  The expression format is "[operator]\<value>".
              spent_time:
                type: string
                description: |
                  The expression of spent time of the issue.
                  The expression format is "[operator]\<value>".
              done_ratio:
                type: string
                description: |
                  The expression of done ratio of the issue.
                  The expression format is "[operator]\<value>".
              is_private:
                type: string
                description: |
                  The expression of private id of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              attachment:
                type: string
                description: |
                  The expression of attachment of the issue.
                  The expression format is "[operator]\<value>".
              attachment_description:
                type: string
                description: |
                  The expression of attachment description of the issue.
                  The expression format is "[operator]\<value>".
              watcher_id:
                type: string
                description: |
                  The expression of watcher id of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              updated_by:
                type: string
                description: |
                  The expression of updated by of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              last_updated_by:
                type: string
                description: |
                  The expression of last updated by of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              subproject_id:
                type: string
                description: |
                  The expression of sub project ID or identifier of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              project.status:
                type: string
                description: |
                  The expression of project status of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              relation_type:
                type: string
                description: |
                  The expression of relation type of the issue.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              parent_id:
                type: string
                description: |
                  The expression of parent id of the issue.
                  The expression format is "[operator]\<value>".
              child_id:
                type: string
                description: |
                  The expression of child id of the issue.
                  The expression format is "[operator]\<value>".
              issue_id:
                type: string
                description: |
                  The expression of issue id of the issue.
                  The expression format is "[operator]\<value>".
              any_searchable:
                type: string
                description: |
                  The expression of any searchable of the issue.
                  The expression format is "[operator]\<value>".
            additionalProperties:
              type: string
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `allowed_statuses`, `attachments`, `changesets`, `children`, `journals`, `relations`, `watchers`.
          schema: &ref_14
            type: array
            items:
              type: string
              enum:
                - allowed_statuses
                - attachments
                - changesets
                - children
                - journals
                - relations
                - watchers
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns a list of issues.
          content: &ref_41
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issues.json:
    get:
      tags:
        - issues
      description: Returns a paginated list of issues. By default, it returns open issues only.
      operationId: issues#index
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: query
          in: query
          schema: *ref_13
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `allowed_statuses`, `attachments`, `changesets`, `children`, `journals`, `relations`, `watchers`.
          schema: *ref_14
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns a list of issues.
          content: &ref_43
            application/json:
              schema:
                type: object
                properties:
                  issues:
                    type: array
                    items:
                      description: |
                        A single issue.
                      type: object
                      properties: &ref_16
                        id:
                          type: integer
                          description: The ID of the issue.
                        project:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the project.
                            name:
                              type: string
                              description: The name of the project.
                        tracker:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the tracker.
                            name:
                              type: string
                              description: The name of the tracker.
                        status:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the status.
                            name:
                              type: string
                              description: The name of the status.
                            is_closed:
                              type: boolean
                              description: The closed of the status.
                        priority:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the priority.
                            name:
                              type: string
                              description: The name of the priority.
                        author:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the author.
                            name:
                              type: string
                              description: The name of the author.
                        assigned_to:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the assigned member.
                            name:
                              type: string
                              description: The name of the assigned member.
                        category:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the category.
                            name:
                              type: string
                              description: The name of the category.
                        fixed_version:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the fixed version.
                            name:
                              type: string
                              description: The name of the fixed version.
                        parent:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the parent issue.
                        subject:
                          type: string
                          description: The subject of the issue.
                        description:
                          type: string
                          description: The description of the issue.
                        start_date:
                          type: string
                          format: date
                          description: The start date of the issue.
                        due_date:
                          type: string
                          format: date
                          description: The due date of the issue.
                        done_ratio:
                          type: integer
                          description: The done ratio of the issue.
                        is_private:
                          type: boolean
                          description: The private of the issue.
                        estimated_hours:
                          type: number
                          description: The estimated hours of the issue.
                        total_estimated_hours:
                          type: number
                          description: The total estimated hours of the issue.
                        spent_hours:
                          type: number
                          description: The spent hours of the issue.
                        total_spent_hour:
                          type: number
                          description: The total spent hours of the issue.
                        custom_fields:
                          type: array
                          items:
                            type: object
                            properties: *ref_6
                        created_on:
                          type: string
                          format: date-time
                          description: The date and time when the issue was created.
                        updated_on:
                          type: string
                          format: date-time
                          description: The date and time when the issue was updated.
                        closed_on:
                          type: string
                          format: date-time
                          description: The date and time when the issue was closed.
                        attachments:
                          type: array
                          items: &ref_30
                            type: object
                            properties: *ref_15
                            additionalProperties: true
                        relations:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The ID of the relation.
                              issue_id:
                                type: integer
                                description: The ID of the issue.
                              issue_to_id:
                                type: integer
                                description: The ID of the issue.
                              relation_type:
                                type: string
                                description: The type of the relation.
                              delay:
                                type: integer
                                description: The delay of the relation.
                  total_count:
                    type: integer
                    description: The total number of issues.
                  offset:
                    type: integer
                    description: The offset of the first issue in the list.
                  limit:
                    type: integer
                    description: The maximum number of issues returned in the list.
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    post:
      tags:
        - issues
      description: Creates a new issue.
      operationId: issues#create
      requestBody:
        description: |
          The issue to create or update.
        content: &ref_19
          application/json:
            schema:
              type: object
              properties:
                issue:
                  description: |
                    A single issue.
                  type: object
                  properties:
                    project_id:
                      type: string
                      description: The project ID or identifier of the issue.
                    tracker_id:
                      type: integer
                      description: The tracker id of the issue.
                    status_id:
                      type: integer
                      description: The status id of the issue.
                    category_id:
                      type: integer
                      description: The category id of the issue.
                    assigned_to_id:
                      type: integer
                      description: The assigned to id id of the issue.
                    priority_id:
                      type: integer
                      description: The priority id of the issue.
                    fixed_version_id:
                      type: integer
                      description: The fixed version id of the issue.
                    subject:
                      type: string
                      description: The subject of the issue.
                    description:
                      type: string
                      description: The description of the issue.
                    start_date:
                      type: string
                      format: date
                      description: The start date of the issue.
                    due_date:
                      type: string
                      format: date
                      description: The due date of the issue.
                    done_ratio:
                      type: integer
                      description: The done ratio of the issue.
                    estimated_hours:
                      type: number
                      description: The estimated hours of the issue.
                    custom_field_values:
                      type: object
                      description: |
                        The values of the custom fields.
                      additionalProperties: true
                    custom_fields:
                      type: array
                      items:
                        type: object
                        properties: *ref_6
                    lock_version:
                      type: string
                      description: The lock version of the issue.
                    notes:
                      type: string
                      description: The notes of the issue.
                    private_notes:
                      type: boolean
                      description: The private notes of the issue.
                    watcher_user_ids:
                      type: array
                      items:
                        type: integer
                        description: The ID of the watcher user.
                    is_private:
                      type: boolean
                      description: The private of the issue.
                    parent_issue_id:
                      type: integer
                      description: The parent ID of the issue.
                    deleted_attachment_ids:
                      type: array
                      items:
                        type: integer
                        description: The ID of the deleted attachment.
        required: true
      responses:
        '201':
          description: |
            Returns the issue with the specified ID.
          content: &ref_17
            application/json:
              schema:
                type: object
                properties:
                  issue:
                    description: |
                      A single issue.
                    allOf: &ref_98
                      - description: |
                          A single issue.
                        type: object
                        properties: *ref_16
                      - type: object
                        properties:
                          children:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the issue.
                                tracker:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the tracker.
                                    name:
                                      type: string
                                      description: The name of the tracker.
                                subject:
                                  type: string
                                  description: The subject of the issue.
                                children:
                                  type: array
                                  items: {}
                          changesets:
                            type: array
                            items:
                              type: object
                              properties:
                                revision:
                                  type: string
                                  description: The revision of the changeset.
                                user:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the user.
                                    name:
                                      type: string
                                      description: The name of the user.
                                comments:
                                  type: string
                                  description: The comments of the changeset.
                                committed_on:
                                  type: string
                                  format: date-time
                                  description: The date and time when the changeset was committed.
                          journals:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the journal.
                                user:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the user.
                                    name:
                                      type: string
                                      description: The name of the user.
                                notes:
                                  type: string
                                  description: The notes of the journal.
                                created_on:
                                  type: string
                                  format: date-time
                                  description: The date and time when the journal was created.
                                updated_on:
                                  type: string
                                  format: date-time
                                  description: The date and time when the journal was updated.
                                updated_by:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the updated.
                                    name:
                                      type: string
                                      description: The name of the updated.
                                private_notes:
                                  type: boolean
                                  description: The private of the journal.
                                details:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      property:
                                        type: string
                                        description: The property of the detail.
                                      name:
                                        type: string
                                        description: The name of the detail.
                                      old_value:
                                        type: string
                                        description: The old value of the detail.
                                      new_value:
                                        type: string
                                        description: The new value of the detail.
                          watchers:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the watcher.
                                name:
                                  type: string
                                  description: The name of the watcher.
                          allowed_statuses:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the allowed statuse.
                                name:
                                  type: string
                                  description: The name of the allowed statuse.
                                is_closed:
                                  type: boolean
                                  description: The closed of the allowed status.
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issues.pdf:
    get:
      tags:
        - issues
      description: Returns a paginated list of issues. By default, it returns open issues only.
      operationId: issues#index-pdf
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: query
          in: query
          schema: *ref_13
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `allowed_statuses`, `attachments`, `changesets`, `children`, `journals`, `relations`, `watchers`.
          schema: *ref_14
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns a list of issues.
          content: &ref_44
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issues/gantt.pdf:
    get:
      tags:
        - gantts
      description: Download the Gantt chart.
      operationId: gantts#show-pdf
      responses:
        '200':
          description: |
            Download the Gantt chart as a PDF file.
          content: &ref_48
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issues/gantt.png:
    get:
      tags:
        - gantts
      description: Download the Gantt chart.
      operationId: gantts#show-png
      responses:
        '200':
          description: |
            Download the Gantt chart as a PNG image.
          content: &ref_50
            image/png:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issues/{id}.json:
    get:
      tags:
        - issues
      description: |
        Returns the issue with the specified ID.
      operationId: issues#show
      parameters:
        - name: id
          in: path
          description: |
            The ID of the issue.
          required: true
          schema: &ref_18
            type: integer
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `allowed_statuses`, `attachments`, `changesets`, `children`, `journals`, `relations`, `watchers`.
          schema: *ref_14
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the issue with the specified ID.
          content: *ref_17
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    patch:
      tags:
        - issues
      description: |
        Updates the issue with the specified ID.
      operationId: issues#update-patch
      parameters:
        - name: id
          in: path
          description: |
            The ID of the issue.
          required: true
          schema: *ref_18
      requestBody:
        description: |
          The issue to create or update.
        content: *ref_19
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - issues
      description: |
        Updates the issue with the specified ID.
      operationId: issues#update-put
      parameters:
        - name: id
          in: path
          description: |
            The ID of the issue.
          required: true
          schema: *ref_18
      requestBody:
        description: |
          The issue to create or update.
        content: *ref_19
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    delete:
      tags:
        - issues
      description: |
        Deletes the issue with the specified ID.
      operationId: issues#destroy
      parameters:
        - name: id
          in: path
          description: |
            The ID of the issue.
          required: true
          schema: *ref_18
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issues/{id}.pdf:
    get:
      tags:
        - issues
      description: |
        Returns the issue with the specified ID.
      operationId: issues#show-pdf
      parameters:
        - name: id
          in: path
          description: |
            The ID of the issue.
          required: true
          schema: *ref_18
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `allowed_statuses`, `attachments`, `changesets`, `children`, `journals`, `relations`, `watchers`.
          schema: *ref_14
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the issue with the specified ID.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issues/{issue_id}/relations.json:
    get:
      tags:
        - issue_relations
      description: Returns the relations for the specified issue ID.
      operationId: issue_relations#index
      parameters:
        - name: issue_id
          in: path
          description: |
            The ID of the issue.
          required: true
          schema: &ref_20
            type: integer
      responses:
        '200':
          description: |
            Returns a list of relations.
          content:
            application/json:
              schema:
                type: object
                properties:
                  relations:
                    type: array
                    items:
                      description: |
                        Represents a single issue relation.
                      type: object
                      properties: &ref_21
                        id:
                          type: integer
                          description: The ID of the relation.
                        issue_id:
                          type: integer
                          description: The ID of the issue.
                        issue_to_id:
                          type: integer
                          description: The ID of the issue to.
                        relation_type:
                          type: string
                          description: The relation type of the relation.
                        delay:
                          type: integer
                          description: The delay of the relation.
        '401':
          description: not provided
        '403':
          description: not provided
    post:
      tags:
        - issue_relations
      description: Creates a relation for the specified issue ID.
      operationId: issue_relations#create
      parameters:
        - name: issue_id
          in: path
          description: |
            The ID of the issue.
          required: true
          schema: *ref_20
      requestBody:
        description: |
          The issue relation to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                relation:
                  description: |
                    Represents a new issue relation to be created.
                  type: object
                  properties:
                    issue_to_id:
                      type: string
                      description: The ID of the issue to. Values should be separated by a comma ",".
                    relation_type:
                      type: string
                      enum:
                        - relates
                        - duplicates
                        - duplicated
                        - blocks
                        - blocked
                        - precedes
                        - follows
                        - copied_to
                        - copied_from
                      description: |
                        The relation type of the relation.
                         Possible values are:
                         - `relates`
                         - `duplicates`
                         - `duplicated`
                         - `blocks`
                         - `blocked`
                         - `precedes`
                         - `follows`
                         - `copied_to`
                         - `copied_from`
        required: true
      responses:
        '201':
          description: |
            Returns the relation with the specified ID.
          content: &ref_76
            application/json:
              schema:
                type: object
                properties:
                  relation:
                    description: |
                      Represents a single issue relation.
                    type: object
                    properties: *ref_21
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issues/{issue_id}/time_entries.json:
    post:
      tags:
        - timelog
      description: Creates a new time entry for the specified issue.
      operationId: timelog#create-issue
      parameters:
        - name: issue_id
          in: path
          description: |
            The ID of the issue.
          required: true
          schema:
            type: integer
      requestBody:
        description: |
          The time entry to create or update.
        content: &ref_62
          application/json:
            schema:
              type: object
              properties:
                time_entry:
                  description: |
                    A single time entry.
                  type: object
                  properties:
                    user_id:
                      type: integer
                      description: The user ID of the time entry.
                    hours:
                      type: number
                      description: The hours of the time entry.
                    comments:
                      type: string
                      description: The comments of the time entry.
                    project_id:
                      type: integer
                      description: The project ID of the time entry.
                    issue_id:
                      type: integer
                      description: The issue ID of the time entry.
                    activity_id:
                      type: integer
                      description: The activity ID of the time entry.
                    spent_on:
                      type: string
                      format: date
                      description: The spent on of the time entry.
                    custom_field_values:
                      type: object
                      description: |
                        The values of the custom fields.
                      additionalProperties: true
                    custom_fields:
                      type: array
                      items:
                        type: object
                        properties: *ref_6
        required: true
      responses:
        '201':
          description: |
            Returns the time entry with the specified ID.
          content: &ref_63
            application/json:
              schema:
                type: object
                properties:
                  time_entry:
                    description: |
                      A single time entry.
                    type: object
                    properties: &ref_61
                      id:
                        type: integer
                        description: The ID of the time entry.
                      project:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the project.
                          name:
                            type: string
                            description: The name of the project.
                      issue:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the issue.
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the user.
                          name:
                            type: string
                            description: The name of the user.
                      activity:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the activity.
                          name:
                            type: string
                            description: The name of the activity.
                      hours:
                        type: number
                        description: The hours of the time entry.
                      comments:
                        type: string
                        description: The comments of the time entry.
                      spent_on:
                        type: string
                        format: date
                        description: The date when the time entry was spent.
                      created_on:
                        type: string
                        format: date-time
                        description: The date and time when the time entry was created.
                      updated_on:
                        type: string
                        format: date-time
                        description: The date and time when the time entry was last updated.
                      custom_fields:
                        type: array
                        items:
                          type: object
                          properties: *ref_6
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issues/{issue_id}/watchers.json:
    post:
      tags:
        - watchers
      description: Creates a new watcher for the specified issue.
      operationId: watchers#create-issue
      parameters:
        - name: issue_id
          in: path
          description: |
            The ID of the issue.
          required: true
          schema: &ref_22
            type: integer
      requestBody:
        description: |
          The watcher to create.
        content: &ref_93
          application/json:
            schema:
              type: object
              properties:
                object_type:
                  type: string
                  description: The type of the object.
                object_id:
                  type: integer
                  description: The ID of the object.
                watcher:
                  description: |
                    Represents a single watcher.
                  type: object
                  properties:
                    user_id:
                      type: integer
                      description: The ID of the user.
                    user_ids:
                      type: array
                      items:
                        type: integer
                        description: The ID of the user.
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issues/{issue_id}/watchers/{user_id}.json:
    delete:
      tags:
        - watchers
      description: |
        Deletes the watcher with the specified ID from the issue.
      operationId: watchers#destroy-issue
      parameters:
        - name: issue_id
          in: path
          description: |
            The ID of the issue.
          required: true
          schema: *ref_22
        - name: user_id
          in: path
          description: |
            The ID of the user.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issue_categories/{id}.json:
    get:
      tags:
        - issue_categories
      description: |
        Returns the issue category with the specified ID.
      operationId: issue_categories#show
      parameters:
        - name: id
          in: path
          description: |
            The ID of the issue category.
          required: true
          schema: &ref_23
            type: integer
      responses:
        '200':
          description: |
            Returns the issue category with the specified ID.
          content: &ref_47
            application/json:
              schema:
                type: object
                properties:
                  issue_category:
                    description: |
                      A single issue category.
                    type: object
                    properties: &ref_45
                      id:
                        type: integer
                        description: The ID of the issue category.
                      project:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the project.
                          name:
                            type: string
                            description: The name of the project.
                      name:
                        type: string
                        description: The name of the issue category.
                      assigned_to:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the assigned to.
                          name:
                            type: string
                            description: The name of the assigned to.
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    patch:
      tags:
        - issue_categories
      description: |
        Updates the issue category with the specified ID.
      operationId: issue_categories#update-patch
      parameters:
        - name: id
          in: path
          description: |
            The ID of the issue category.
          required: true
          schema: *ref_23
      requestBody:
        description: |
          The issue category to create or update.
        content: &ref_24
          application/json:
            schema:
              type: object
              properties:
                issue_category:
                  description: |
                    A single issue_category.
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the issue category.
                    assigned_to_id:
                      type: integer
                      description: The ID of the assinged to.
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - issue_categories
      description: |
        Updates the issue category with the specified ID.
      operationId: issue_categories#update-put
      parameters:
        - name: id
          in: path
          description: |
            The ID of the issue category.
          required: true
          schema: *ref_23
      requestBody:
        description: |
          The issue category to create or update.
        content: *ref_24
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    delete:
      tags:
        - issue_categories
      description: |
        Deletes the issue category with the specified ID.
      operationId: issue_categories#destroy
      parameters:
        - name: id
          in: path
          description: |
            The ID of the issue category.
          required: true
          schema: *ref_23
        - name: reassign_to_id
          in: query
          description: |
            The ID of the issue category.
          schema:
            type: integer
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /issue_statuses.json:
    get:
      tags:
        - issue_statuses
      description: Returns a list of all issue statuses.
      operationId: issue_statuses#index
      responses:
        '200':
          description: |
            Returns a list of all issue statuses.
          content:
            application/json:
              schema:
                type: object
                properties:
                  issue_statuses:
                    type: array
                    items:
                      description: |
                        Represents a single issue status.
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The unique identifier of the issue status.
                        name:
                          type: string
                          description: The name of the issue status.
                        is_closed:
                          type: boolean
                          description: Whether the issue status is closed.
                        description:
                          type: string
                          description: A description of the issue status.
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /journals/{id}.json:
    patch:
      tags:
        - journals
      description: |
        Update the journal with the specified ID.
      operationId: journals#update-patch
      parameters:
        - name: id
          in: path
          description: |
            The ID of the journal.
          required: true
          schema: &ref_25
            type: integer
      requestBody:
        description: |
          The journal object to update.
        content: &ref_26
          application/json:
            schema:
              type: object
              properties:
                journal:
                  description: |
                    Represents a single journal entry.
                  type: object
                  properties:
                    notes:
                      type: string
                      description: The notes for the journal entry.
                    private_notes:
                      type: boolean
                      description: Whether the notes is private.
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - journals
      description: |
        Update the journal with the specified ID.
      operationId: journals#update-put
      parameters:
        - name: id
          in: path
          description: |
            The ID of the journal.
          required: true
          schema: *ref_25
      requestBody:
        description: |
          The journal object to update.
        content: *ref_26
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /memberships/{id}.json:
    get:
      tags:
        - members
      description: |
        Returns the membership with the specified ID.
      operationId: members#show
      parameters:
        - name: id
          in: path
          description: |
            The ID of the membership.
          required: true
          schema: &ref_27
            type: integer
      responses:
        '200':
          description: |
            Returns the membership with the specified ID.
          content: &ref_53
            application/json:
              schema:
                type: object
                properties:
                  membership:
                    description: |
                      A single membership.
                    type: object
                    properties: &ref_51
                      id:
                        type: integer
                        description: The ID of the membership.
                      project:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the project.
                          name:
                            type: string
                            description: The name of the project.
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the user.
                          name:
                            type: string
                            description: The name of the user.
                      group:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the group.
                          name:
                            type: string
                            description: The name of the group.
                      roles:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the role.
                            name:
                              type: string
                              description: The name of the role.
                            inherited:
                              type: boolean
                              description: Whether the role is inherited from a parent project.
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    patch:
      tags:
        - members
      description: |
        Updates the membership with the specified ID.
      operationId: members#update-patch
      parameters:
        - name: id
          in: path
          description: |
            The ID of the membership.
          required: true
          schema: *ref_27
      requestBody:
        description: |
          The membership to create or update.
        content: &ref_28
          application/json:
            schema:
              type: object
              properties:
                membership:
                  description: |
                    A single membership.
                  type: object
                  properties:
                    user_id:
                      type: integer
                      description: The ID of the user.
                    user_ids:
                      type: array
                      items:
                        type: integer
                        description: The ID of the user.
                    role_ids:
                      type: array
                      items:
                        type: integer
                        description: The ID of the role.
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - members
      description: |
        Updates the membership with the specified ID.
      operationId: members#update-put
      parameters:
        - name: id
          in: path
          description: |
            The ID of the membership.
          required: true
          schema: *ref_27
      requestBody:
        description: |
          The membership to create or update.
        content: *ref_28
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    delete:
      tags:
        - members
      description: |
        Deletes the membership with the specified ID.
      operationId: members#destroy
      parameters:
        - name: id
          in: path
          description: |
            The ID of the membership.
          required: true
          schema: *ref_27
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /my/account.json:
    get:
      tags:
        - my
      description: Returns the current user's account information.
      operationId: my#account
      responses:
        '200':
          description: Returns the current user's account information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    description: |
                      Represents a single user.
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The unique identifier of the user.
                      login:
                        type: string
                        description: The login name of the user.
                      admin:
                        type: boolean
                        description: Whether the user has administrative privileges.
                      firstname:
                        type: string
                        description: The first name of the user.
                      lastname:
                        type: string
                        description: The last name of the user.
                      mail:
                        type: string
                        description: The email address of the user.
                      created_on:
                        type: string
                        format: date-time
                        description: The date and time when the user account was created.
                      last_login_on:
                        type: string
                        format: date-time
                        description: The date and time when the user last logged in.
                      api_key:
                        type: string
                        description: The API key for the user.
                      custom_fields:
                        type: array
                        items:
                          type: object
                          properties: *ref_6
        '401':
          description: not provided
        '403':
          description: not provided
    put:
      tags:
        - my
      description: Update the current user's account information.
      operationId: my#account-put
      requestBody:
        description: The user account information to update.
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  description: |
                    A single user.
                  type: object
                  properties: &ref_87
                    firstname:
                      type: string
                      description: The firstname of the user.
                    lastname:
                      type: string
                      description: The lastname of the user.
                    mail:
                      type: string
                      description: The mail address of the user.
                    mail_notification:
                      type: string
                      enum:
                        - all
                        - selected
                        - only_my_events
                        - only_assigned
                        - only_owner
                        - none
                      description: |
                        The mail notification of the user. Possible values are:
                        - `all`: all events
                        - `selected`: only selected events
                        - `only_my_events`: only events related to the user
                        - `only_assigned`: only events assigned to the user
                        - `only_owner`: only events owned by the user
                        - `none`: no events
                    notified_project_ids:
                      type: array
                      description: The notified project ID or identifier of the user.
                      items:
                        type: string
                    language:
                      type: string
                      description: The language of the user.
                    custom_field_values:
                      type: object
                      description: |
                        The values of the custom fields.
                      additionalProperties: true
                    custom_fields:
                      type: array
                      items:
                        type: object
                        properties: *ref_6
                    login:
                      type: string
                      description: The login of the user.
                    status:
                      type: integer
                      enum:
                        - 0
                        - 1
                        - 2
                        - 3
                      description: |
                        The status of the user. Possible values are:
                        - `0`: anonymous
                        - `1`: active
                        - `2`: registered
                        - `3`: locked
                    auth_source_id:
                      type: integer
                      description: The auth source id of the user.
                    generate_password:
                      type: boolean
                      description: The generate password of the user.
                    must_change_passwd:
                      type: boolean
                      description: The must change passwd of the user.
                    admin:
                      type: boolean
                      description: The administrative of the user.
                    group_ids:
                      type: array
                      description: The group id of the user.
                      items:
                        type: integer
                    password:
                      type: string
                      description: The password of the user.
                pref:
                  description: |
                    The preferences of the user.
                  type: object
                  properties: &ref_88
                    hide_mail:
                      type: boolean
                      description: Whether the user's email should be hidden.
                    time_zone:
                      type: string
                      description: The time zone of the user.
                    comments_sorting:
                      type: string
                      enum:
                        - asc
                        - desc
                      description: The sorting order of comments. Possible values are `asc` and `desc`.
                    warn_on_leaving_unsaved:
                      type: string
                      description: |
                        Whether to warn the user when leaving a page with unsaved changes. Possible values are:
                        - `0`: Disable
                        - `1`: Enable
                    no_self_notified:
                      type: boolean
                      description: Whether the user should not be notified of their own actions.
                    notify_about_high_priority_issues:
                      type: boolean
                      description: Whether the user should be notified about high priority issues.
                    textarea_font:
                      type: string
                      enum:
                        - monospace
                        - proportional
                      description: |
                        The font used in text areas. Possible values are:
                        - `monospace`
                        - `proportional`
                    recently_used_projects:
                      type: integer
                      description: The number of recently used projects to display.
                    history_default_tab:
                      type: string
                      enum:
                        - notes
                        - history
                        - properties
                        - time_entries
                        - changesets
                        - last_tab_visited
                      description: |
                        The default tab for the user's history. Possible values are:
                        - `notes`
                        - `history`
                        - `properties`
                        - `time_entries`
                        - `changesets`
                        - `last_tab_visited`
                    default_issue_query:
                      type: integer
                      description: The ID of the default issue query for the user.
                    default_project_query:
                      type: integer
                      description: The ID of the default project query for the user.
                    toolbar_language_options:
                      type: string
                      description: The language options for the toolbar.
                    auto_watch_on:
                      type: array
                      description: |
                        The auto watch setting for the user. Possible values are:
                        - `issue_created`
                        - `issue_contributed_to`
                      items:
                        type: string
                        enum:
                          - issue_created
                          - issue_contributed_to
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /news.json:
    get:
      tags:
        - news
      description: Returns all news items across all projects with pagination.
      operationId: news#index
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
      responses:
        '200':
          description: |
            Returns all news across all projects with pagination.
          content: &ref_54
            application/json:
              schema:
                type: object
                properties:
                  news:
                    type: array
                    items:
                      description: |
                        A single news.
                      type: object
                      properties: &ref_29
                        id:
                          type: integer
                          description: The ID of the news.
                        project:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the project.
                            name:
                              type: string
                              description: The name of the project.
                        author:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the author.
                            name:
                              type: string
                              description: The name of the author.
                        title:
                          type: string
                          description: The title of the news.
                        summary:
                          type: string
                          description: The summary of the news.
                        description:
                          type: string
                          description: The description of the news.
                        created_on:
                          type: string
                          format: date-time
                          description: The date and time when the news was created.
                  total_count:
                    type: integer
                    description: The total number of news.
                  offset:
                    type: integer
                    description: The offset of the first news in the list.
                  limit:
                    type: integer
                    description: The maximum number of news returned in the list.
        '401':
          description: not provided
        '403':
          description: not provided
    post:
      tags:
        - news
      description: Creates a new news item.
      operationId: news#create
      requestBody:
        description: |
          The news to create or update.
        content:
          application/json:
            schema:
              type: object
              properties:
                news:
                  description: |
                    A single news.
                  type: object
                  properties: &ref_32
                    title:
                      type: string
                      description: The title of the news.
                    summary:
                      type: string
                      description: The summary of the news.
                    description:
                      type: string
                      description: The description of the news.
                project_id:
                  type: string
                  description: The ID or identifier of the project.
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /news/{id}.json:
    get:
      tags:
        - news
      description: |
        Returns the news item with the specified ID.
      operationId: news#show
      parameters:
        - name: id
          in: path
          description: |
            The ID of the news.
          required: true
          schema: &ref_31
            type: integer
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `attachments`, `comments`.
          schema:
            type: array
            items:
              type: string
              enum:
                - attachments
                - comments
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the news with the specified ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  news:
                    description: |
                      A single news.
                    allOf: &ref_99
                      - description: |
                          A single news.
                        type: object
                        properties: *ref_29
                      - type: object
                        properties:
                          attachments:
                            type: array
                            items: *ref_30
                          comments:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the comment.
                                author:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the author.
                                    name:
                                      type: string
                                      description: The name of the author.
                                content:
                                  type: string
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    patch:
      tags:
        - news
      description: |
        Updates the news with the specified ID.
      operationId: news#update-patch
      parameters:
        - name: id
          in: path
          description: |
            The ID of the news.
          required: true
          schema: *ref_31
      requestBody:
        description: |
          The news to create.
        content: &ref_33
          application/json:
            schema:
              type: object
              properties:
                news:
                  description: |
                    A single news.
                  type: object
                  properties: *ref_32
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - news
      description: |
        Updates the news with the specified ID.
      operationId: news#update-put
      parameters:
        - name: id
          in: path
          description: |
            The ID of the news.
          required: true
          schema: *ref_31
      requestBody:
        description: |
          The news to create.
        content: *ref_33
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    delete:
      tags:
        - news
      description: |
        Deletes the news with the specified ID.
      operationId: news#destroy
      parameters:
        - name: id
          in: path
          description: |
            The ID of the news.
          required: true
          schema: *ref_31
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects.csv:
    get:
      tags:
        - projects
      description: |
        Returns all projects (including all public projects and private projects to which the user has access).
      operationId: projects#index-csv
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: query
          in: query
          schema: &ref_34
            type: object
            properties:
              status:
                type: string
                description: |
                  The expression of status of the project.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
                  Possible values are:
                  - `1`: active
                  - `5`: closed

                  examples:
                  - active or closed: `1|5`
                  - not closed: `!5`
              id:
                type: string
                description: |
                  The expression of identifier of the project.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              name:
                type: string
                description: |
                  The expression of name of the project.
                  The expression format is "\<operator>\<value>".
                  examples:
                  - contains "test": `~test`
                  - not contains "test": `!~test`
              description:
                type: string
                description: |
                  The expression of description of the project.
                  The expression format is "\<operator>\<value>".
                  examples:
                  - contains "test": `~test`
                  - not contains "test": `!~test`
              parent_id:
                type: string
                description: |
                  The expression of parent project id of the project.
                  The expression format is "\<operator>\<values>". Values should be separated by a pipe "|".
              is_public:
                type: string
                description: |
                  The expression of visibility of the project.
                  The expression format is "\<operator>\<values>". Values should be separated by a pipe "|".
                  Possible values are:
                  - `0`: private
                  - `1`: public

                  examples:
                  - public only: `1`
                  - public or private: `0|1`
              created_on:
                type: string
                description: |
                  The expression of created_on of the project.
                  The expression format is "[operator]\<value>".
                  examples:
                  - last week : `lw`
                  - before "2025/7/12": `<=2025-07-12`
              updated_on:
                type: string
                description: |
                  The expression of updated_on of the project.
                  The expression format is "[operator]\<value>".
                  examples:
                  - last week : `lw`
                  - before "2025/7/12": `<=2025-07-12`
            additionalProperties:
              type: string
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `trackers`, `issue_categories`, `enabled_modules`, `time_entry_activities`, `issue_custom_fields`.
          schema: &ref_35
            type: array
            items:
              type: string
              enum:
                - trackers
                - issue_categories
                - enabled_modules
                - time_entry_activities
                - issue_custom_fields
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns all projects (including all public projects and private projects to which the user has access).
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects.json:
    get:
      tags:
        - projects
      description: |
        Returns all projects (including all public projects and private projects to which the user has access).
      operationId: projects#index
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: query
          in: query
          schema: *ref_34
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `trackers`, `issue_categories`, `enabled_modules`, `time_entry_activities`, `issue_custom_fields`.
          schema: *ref_35
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns all projects (including all public projects and private projects to which the user has access).
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      description: |
                        A single project.
                      type: object
                      properties: &ref_36
                        id:
                          type: integer
                          description: The ID of the project.
                        name:
                          type: string
                          description: The name of the project.
                        identifier:
                          type: string
                          description: The identifier of the project.
                        description:
                          type: string
                          description: The description of the project.
                        homepage:
                          type: string
                          description: The homepage URL of the project.
                        parent:
                          type: object
                          description: |
                            The parent project of the project. If the project has no parent, this will be `null`.
                          properties:
                            id:
                              type: integer
                              description: The ID of the parent project.
                            name:
                              type: string
                              description: The name of the parent project.
                        status:
                          type: integer
                          description: |
                            The status of the project. Possible values are:
                            - `1`: active
                            - `5`: closed
                            - `9`: archived
                            - `10`: scheduled for deletion
                        is_public:
                          type: boolean
                          description: The visibility of the project. `true` if the project is public, `false` if it is private.
                        inherit_members:
                          type: boolean
                          description: |
                            Whether the project inherits members from its parent project. `true` if it does, `false` if it does not.
                        custom_fields:
                          type: array
                          items:
                            type: object
                            properties: *ref_6
                        trackers:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The ID of the tracker.
                              name:
                                type: string
                                description: The name of the tracker.
                        issue_categories:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The ID of the issue category.
                              name:
                                type: string
                                description: The name of the issue category.
                        time_entry_activities:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The ID of the time entry activity.
                              name:
                                type: string
                                description: The name of the time entry activity.
                        enabled_modules:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The ID of the enabled module.
                              name:
                                type: string
                                description: The name of the enabled module.
                        issue_custom_fields:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The ID of the issue custom field.
                              name:
                                type: string
                                description: The name of the issue custom field.
                        created_on:
                          type: string
                          format: date-time
                          description: The date and time when the project was created.
                        updated_on:
                          type: string
                          format: date-time
                          description: The date and time when the project was last updated.
                  total_count:
                    type: integer
                    description: The total number of projects.
                  offset:
                    type: integer
                    description: The offset of the first project in the list.
                  limit:
                    type: integer
                    description: The maximum number of projects returned in the list.
        '401':
          description: not provided
        '403':
          description: not provided
    post:
      tags:
        - projects
      description: |
        Creates a new project.
      operationId: projects#create
      requestBody:
        description: |
          The project to create or update.
        content: &ref_39
          application/json:
            schema:
              type: object
              properties:
                project:
                  description: |
                    A single project.
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the project.
                    description:
                      type: string
                      description: The description of the project.
                    homepage:
                      type: string
                      description: The homepage URL of the project.
                    identifier:
                      type: string
                      description: The identifier of the project.
                    custom_field_values:
                      type: object
                      description: |
                        The values of the custom fields.
                      additionalProperties: true
                    custom_fields:
                      type: array
                      items:
                        type: object
                        properties: *ref_6
                    tracker_ids:
                      type: array
                      description: The IDs of the trackers associated with the project.
                      items:
                        type: integer
                    issue_custom_field_ids:
                      type: array
                      description: The IDs of the issue custom fields associated with the project.
                      items:
                        type: integer
                    parent_id:
                      type: integer
                      description: The ID of the parent project.
                    default_version_id:
                      type: integer
                      description: The ID of the default version of the project.
                    default_issue_query_id:
                      type: integer
                      description: The ID of the default issue query of the project
                    default_assigned_to_id:
                      type: integer
                      description: The ID of the default assignee of the project.
                    is_public:
                      type: boolean
                      description: The visibility of the project. `true` if the project is public, `false` if it is private.
                    enabled_module_names:
                      type: array
                      description: The names of the enabled modules for the project.
                      items:
                        type: string
                    inherit_members:
                      type: boolean
                      description: |
                        Whether the project inherits members from its parent project. `true` if it does, `false` if it does not.
        required: true
      responses:
        '201':
          description: |
            Returns the project with the specified ID or identifier.
          content: &ref_37
            application/json:
              schema:
                type: object
                properties:
                  project:
                    description: |
                      A single project.
                    allOf: &ref_100
                      - description: |
                          A single project.
                        type: object
                        properties: *ref_36
                      - type: object
                        properties:
                          default_version:
                            type: object
                            description: |
                              The default version of the project. If the project has no default version, this will be `null`.
                            properties:
                              id:
                                type: integer
                                description: The ID of the default version.
                              name:
                                type: string
                                description: The name of the default version.
                          default_assignee:
                            type: object
                            description: |
                              The default assignee of the project. If the project has no default assignee, this will be `null`.
                            properties:
                              id:
                                type: integer
                                description: The ID of the default assignee.
                              name:
                                type: string
                                description: The name of the default assignee.
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{id}.json:
    get:
      tags:
        - projects
      description: |
        Returns the project with the specified ID or identifier.
      operationId: projects#show
      parameters:
        - name: id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: &ref_38
            type: string
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `trackers`, `issue_categories`, `enabled_modules`, `time_entry_activities`, `issue_custom_fields`.
          schema: *ref_35
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the project with the specified ID or identifier.
          content: *ref_37
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    patch:
      tags:
        - projects
      description: |
        Updates the project with the specified ID or identifier.
      operationId: projects#update-patch
      parameters:
        - name: id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_38
      requestBody:
        description: |
          The project to create or update.
        content: *ref_39
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - projects
      description: |
        Updates the project with the specified ID or identifier.
      operationId: projects#update-put
      parameters:
        - name: id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_38
      requestBody:
        description: |
          The project to create or update.
        content: *ref_39
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    delete:
      tags:
        - projects
      description: |
        Deletes the project with the specified ID or identifier.
      operationId: projects#destroy
      parameters:
        - name: id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_38
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{id}/archive.json:
    post:
      tags:
        - projects
      description: |
        Archives the project with the specified ID or identifier.
      operationId: projects#archive-post
      parameters:
        - name: id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_38
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - projects
      description: |
        Archives the project with the specified ID or identifier.
      operationId: projects#archive-put
      parameters:
        - name: id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_38
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/files.json:
    get:
      tags:
        - files
      description: Returns a list of all files.
      operationId: files#index
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: &ref_40
            type: string
      responses:
        '200':
          description: |
            Returns a list of all files.
          content:
            application/json:
              schema:
                type: object
                properties:
                  files:
                    type: array
                    items:
                      description: Represents a single file.
                      allOf: &ref_101
                        - type: object
                          properties: *ref_15
                          additionalProperties: true
                        - type: object
                          properties:
                            version:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the version.
                                name:
                                  type: string
                                  description: The name of the version.
                            digest:
                              type: string
                              description: The digest of the file.
                            downloads:
                              type: integer
                              description: The downloads of the file.
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    post:
      tags:
        - files
      description: Creates a new file.
      operationId: files#create
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_40
      requestBody:
        description: |
          The file object to create.
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  description: |
                    Represents a new file to be created.
                  type: object
                  properties:
                    token:
                      type: string
                      description: The upload token for the file.
                    version_id:
                      type: integer
                      description: The ID of the version associated with the file.
                    filename:
                      type: string
                      description: The name of the file.
                    description:
                      type: string
                      description: The description of the file.
        required: true
      responses:
        '204':
          description: not provided
        '400':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{id}/unarchive.json:
    post:
      tags:
        - projects
      description: |
        Unarchives the project with the specified ID or identifier.
      operationId: projects#unarchive-post
      parameters:
        - name: id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_38
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    put:
      tags:
        - projects
      description: |
        Unarchives the project with the specified ID or identifier.
      operationId: projects#unarchive-put
      parameters:
        - name: id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_38
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/issues.csv:
    get:
      tags:
        - issues
      description: Returns a paginated list of issues. By default, it returns open issues only.
      operationId: issues#index-project-csv
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: &ref_42
            type: string
        - name: query
          in: query
          schema: *ref_13
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `allowed_statuses`, `attachments`, `changesets`, `children`, `journals`, `relations`, `watchers`.
          schema: *ref_14
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns a list of issues.
          content: *ref_41
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/issues.json:
    get:
      tags:
        - issues
      description: Returns a paginated list of issues. By default, it returns open issues only.
      operationId: issues#index-project
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_42
        - name: query
          in: query
          schema: *ref_13
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `allowed_statuses`, `attachments`, `changesets`, `children`, `journals`, `relations`, `watchers`.
          schema: *ref_14
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns a list of issues.
          content: *ref_43
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    post:
      tags:
        - issues
      description: Creates a new issue.
      operationId: issues#create-project
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_42
      requestBody:
        description: |
          The issue to create or update.
        content: *ref_19
        required: true
      responses:
        '201':
          description: |
            Returns the issue with the specified ID.
          content: *ref_17
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/issues.pdf:
    get:
      tags:
        - issues
      description: Returns a paginated list of issues. By default, it returns open issues only.
      operationId: issues#index-project-pdf
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_42
        - name: query
          in: query
          schema: *ref_13
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `allowed_statuses`, `attachments`, `changesets`, `children`, `journals`, `relations`, `watchers`.
          schema: *ref_14
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns a list of issues.
          content: *ref_44
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/issue_categories.json:
    get:
      tags:
        - issue_categories
      description: Returns the issue categories available for the specified project by ID or identifier.
      operationId: issue_categories#index
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: nometa
          in: query
          description: |
            If set to 1, the response will not include metadata information.
          schema: &ref_64
            type: integer
            enum:
              - 1
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: &ref_46
            type: string
      responses:
        '200':
          description: |
            Returns a list of issue categories.
          content:
            application/json:
              schema:
                type: object
                properties:
                  issue_categories:
                    type: array
                    items:
                      description: |
                        A single issue category.
                      type: object
                      properties: *ref_45
                  total_count:
                    type: integer
                    description: The total number of issue categories.
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    post:
      tags:
        - issue_categories
      description: Creates an issue category with specified the project ID or identifier.
      operationId: issue_categories#create
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_46
      requestBody:
        description: |
          The issue category to create or update.
        content: *ref_24
        required: true
      responses:
        '201':
          description: |
            Returns the issue category with the specified ID.
          content: *ref_47
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/issues/gantt.pdf:
    get:
      tags:
        - gantts
      description: Download the Gantt chart for the specified project.
      operationId: gantts#show-project-pdf
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: &ref_49
            type: string
      responses:
        '200':
          description: |
            Download the Gantt chart as a PDF file.
          content: *ref_48
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/issues/gantt.png:
    get:
      tags:
        - gantts
      description: Download the Gantt chart for the specified project.
      operationId: gantts#show-project-png
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_49
      responses:
        '200':
          description: |
            Download the Gantt chart as a PNG image.
          content: *ref_50
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/memberships.json:
    get:
      tags:
        - members
      description: Returns a paginated list of project memberships.
      operationId: members#index
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: &ref_52
            type: string
      responses:
        '200':
          description: |
            Returns a list of memberships.
          content:
            application/json:
              schema:
                type: object
                properties:
                  memberships:
                    type: array
                    items:
                      description: |
                        A single membership.
                      type: object
                      properties: *ref_51
                  total_count:
                    type: integer
                    description: The total number of memberships.
                  offset:
                    type: integer
                    description: The offset of the first membership in the list.
                  limit:
                    type: integer
                    description: The maximum number of memberships returned in the list.
        '401':
          description: not provided
        '403':
          description: not provided
    post:
      tags:
        - members
      description: Adds a new member to the project.
      operationId: members#create
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_52
      requestBody:
        description: |
          The membership to create or update.
        content: *ref_28
        required: true
      responses:
        '201':
          description: |
            Returns the membership with the specified ID.
          content: *ref_53
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/news.json:
    get:
      tags:
        - news
      description: Returns all news items across all projects with pagination.
      operationId: news#index-project
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: &ref_55
            type: string
      responses:
        '200':
          description: |
            Returns all news across all projects with pagination.
          content: *ref_54
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    post:
      tags:
        - news
      description: Creates a new news item.
      operationId: news#create-project
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_55
      requestBody:
        description: |
          The news to create.
        content: *ref_33
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{id}/repository/{repository_id}/revisions/{rev}/issues.json:
    post:
      tags:
        - repositories
      description: Add a related issue to the specified revision.
      operationId: repositories#add_related_issue
      parameters:
        - name: id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: &ref_56
            type: string
        - name: repository_id
          in: path
          description: |
            The unique identifier of the repository.
          required: true
          schema: &ref_57
            type: string
        - name: rev
          in: path
          description: |
            The revision identifier of the changeset.
          required: true
          schema: &ref_58
            type: string
      requestBody:
        description: |
          The repository object to create or update.
        content:
          application/json:
            schema:
              type: object
              properties:
                issue_id:
                  type: integer
                  description: The ID of the issue.
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{id}/repository/{repository_id}/revisions/{rev}/issues/{issue_id}.json:
    delete:
      tags:
        - repositories
      description: Remove a related issue from the specified revision.
      operationId: repositories#remove_related_issue
      parameters:
        - name: id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_56
        - name: repository_id
          in: path
          description: |
            The unique identifier of the repository.
          required: true
          schema: *ref_57
        - name: rev
          in: path
          description: |
            The revision identifier of the changeset.
          required: true
          schema: *ref_58
        - name: issue_id
          in: path
          description: |
            The ID of the issue.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/search.json:
    get:
      tags:
        - search
      description: Returns search results based on the specified query parameters.
      operationId: search#index-project
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema:
            type: string
        - name: q
          in: query
          description: |
            Query string. Multiple values can be specified, separated by a space (" ").
          required: true
          schema: &ref_79
            type: string
        - name: query
          in: query
          schema: &ref_80
            type: object
            properties:
              scope:
                type: string
                enum:
                  - all
                  - my_project
                  - bookmarks
                  - subprojects
                description: |
                  Search scope condition.
                  Possible values are:
                  - `all`: Search all projects
                  - `my_project`: Search assigned projects
                  - `bookmarks`: Search bookmarked projects
                  - `subprojects`: Include subproject when project specified
              all_words:
                type: boolean
                description: matched all query strings or not.
              titles_only:
                type: boolean
                description: matched only title or not.
              issues:
                type: boolean
                description: Include issues or not.
              news:
                type: boolean
                description: Include news or not.
              documents:
                type: boolean
                description: Include documents or not.
              changesets:
                type: boolean
                description: Include changesets or not.
              wiki_pages:
                type: boolean
                description: Include documents or not.
              messages:
                type: boolean
                description: Include messages or not.
              projects:
                type: boolean
                description: Include projects or not.
              open_issues:
                type: boolean
                description: Filterd by open issues.
              attachments:
                type: string
                description: |
                  Filterd by description and attachment.
                  - `0`: Seach only in description
                  - `1`: Search by description and attachment
                  - `only`: Search only in attachment
      responses:
        '200':
          description: |
            Returns a list of search results.
          content: &ref_81
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      description: |
                        Represents a single search result.
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the search result.
                        title:
                          type: string
                          description: The title of the search result.
                        type:
                          type: string
                          description: The type of the search result.
                        url:
                          type: string
                          description: The url of the search result.
                        description:
                          type: string
                          description: The description of the search result.
                        datetime:
                          type: string
                          format: date-time
                          description: The date and time when the search result was created.
                  total_count:
                    type: integer
                    description: The total number of search results.
                  offset:
                    type: integer
                    description: The offset of the first search result in the list.
                  limit:
                    type: integer
                    description: The maximum number of search results returned in the list.
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/time_entries.csv:
    get:
      tags:
        - timelog
      description: Returns a list of time entries for the specified project in CSV format.
      operationId: timelog#index-project-csv
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifer of the project.
          required: true
          schema: &ref_59
            type: string
        - name: query
          in: query
          schema: &ref_60
            type: object
            properties:
              spent_on:
                type: string
                description: |
                  The expression of spent_on of the time entry.
                  The expression format is "[operator]\<value>".
                  examples:
                  - last week : `lw`
                  - before "2025/7/12": `<=2025-07-12`
              project_id:
                type: string
                description: |
                  The expression of project ID or identifier of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              subproject_id:
                type: string
                description: |
                  The expression of sub project ID or identifier of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              issue_id:
                type: string
                description: |
                  The expression of issue id of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              issue.tracker_id:
                type: string
                description: |
                  The expression of issue tracker id of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              issue.parent_id:
                type: string
                description: |
                  The expression of issue parent id of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              issue.status_id:
                type: string
                description: |
                  The expression of issue status id of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              issue.fixed_version_id:
                type: string
                description: |
                  The expression of issue fixed version id of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              issue.category_id:
                type: string
                description: |
                  The expression of issue status id of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              issue.subject:
                type: string
                description: |
                  The expression of issue subject of the time entry.
                  The expression format is "\<operator>\<value>".
                  examples:
                  - contains "test": `~test`
                  - not contains "test": `!~test`
              user_id:
                type: string
                description: |
                  The expression of user id of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              user.group:
                type: string
                description: |
                  The expression of user group of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              user.role:
                type: string
                description: |
                  The expression of user role of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              author_id:
                type: string
                description: |
                  The expression of author id of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              activity_id:
                type: string
                description: |
                  The expression of activity id of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              project.status:
                type: string
                description: |
                  The expression of project status of the time entry.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              issue.comments:
                type: string
                description: |
                  The expression of comments of the time entry.
                  The expression format is "\<operator>\<value>".
                  examples:
                  - contains "test": `~test`
                  - not contains "test": `!~test`
              hours:
                type: string
                description: |
                  The expression of hours of the time entry.
                  The expression format is "\<operator>\<value>".
            additionalProperties:
              type: string
      responses:
        '200':
          description: |
            Returns a list of time entries.
          content: &ref_82
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/time_entries.json:
    get:
      tags:
        - timelog
      description: Returns a list of time entries for the specified project.
      operationId: timelog#index-project
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: project_id
          in: path
          description: |
            The ID or identifer of the project.
          required: true
          schema: *ref_59
        - name: query
          in: query
          schema: *ref_60
      responses:
        '200':
          description: |
            Returns a list of time entries.
          content: &ref_83
            application/json:
              schema:
                type: object
                properties:
                  time_entries:
                    type: array
                    items:
                      description: |
                        A single time entry.
                      type: object
                      properties: *ref_61
                  total_count:
                    type: integer
                    description: The total number of time entries.
                  offset:
                    type: integer
                    description: The offset of the first time entry in the list.
                  limit:
                    type: integer
                    description: The maximum number of time entries returned in the list.
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    post:
      tags:
        - timelog
      description: Creates a new time entry.
      operationId: timelog#create-project
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifer of the project.
          required: true
          schema: *ref_59
      requestBody:
        description: |
          The time entry to create or update.
        content: *ref_62
        required: true
      responses:
        '201':
          description: |
            Returns the time entry with the specified ID.
          content: *ref_63
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/versions.json:
    get:
      tags:
        - versions
      description: |
        Returns the versions available for the project with the specified ID or identifier (:project_id).
        The response may include shared versions from other projects.
      operationId: versions#index
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: nometa
          in: query
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_64
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: &ref_65
            type: string
      responses:
        '200':
          description: |
            Returns a list of versions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  versions:
                    type: array
                    items:
                      description: |
                        A single version.
                      properties: &ref_66
                        id:
                          type: integer
                          description: The ID of the version.
                        project:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the project.
                            name:
                              type: string
                              description: The name of the project.
                        name:
                          type: string
                          description: The name of the version.
                        description:
                          type: string
                          description: The description of the version.
                        status:
                          type: string
                          description: The status of the version.
                        due_date:
                          type: string
                          format: date
                          description: The date when the version was expired.
                        sharing:
                          type: string
                          description: The sharing of the version.
                        wiki_page_title:
                          type: string
                          description: The wiki page title of the version.
                        custom_fields:
                          type: array
                          items:
                            type: object
                            properties: *ref_6
                        created_on:
                          type: string
                          format: date-time
                          description: The date and time when the version was created.
                        updated_on:
                          type: string
                          format: date-time
                          description: The date and time when the version was last updated.
                  total_count:
                    type: integer
                    description: The total number of versions.
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    post:
      tags:
        - versions
      description: Creates a new version for the project with the specified ID or identifier (:project_id).
      operationId: versions#create
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_65
      requestBody:
        description: |
          The version to create or update.
        content: &ref_96
          application/json:
            schema:
              type: object
              properties:
                version:
                  description: |
                    A single version.
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the version.
                    description:
                      type: string
                      description: The description of the version.
                    effective_date:
                      type: string
                      description: The effective date of the version.
                    due_date:
                      type: string
                      format: date
                      description: The due date of the version.
                    wiki_page_title:
                      type: string
                      description: The wiki page title of the version.
                    status:
                      type: string
                      enum:
                        - open
                        - locked
                        - closed
                      description: |
                        The status of the version. Possible values are:
                        - `open`
                        - `locked`
                        - `closed`
                    sharing:
                      type: string
                      enum:
                        - none
                        - descendants
                        - hierarchy
                        - tree
                        - system
                      description: |
                        The sharing of the version. Possible values are:
                        - `none`
                        - `descendants`
                        - `hierarchy`
                        - `tree`
                        - `system`
                    default_project_version:
                      type: boolean
                      description: The default project version of the version.
                    custom_field_values:
                      type: object
                      description: |
                        The values of the custom fields.
                      additionalProperties: true
                    custom_fields:
                      type: array
                      items:
                        type: object
                        properties: *ref_6
        required: true
      responses:
        '201':
          description: |
            Returns the version with the specified ID.
          content: &ref_95
            application/json:
              schema:
                type: object
                properties:
                  version:
                    description: |
                      A single version.
                    allOf: &ref_102
                      - description: |
                          A single version.
                        properties: *ref_66
                      - type: object
                        properties:
                          estimated_hours:
                            type: number
                            description: The estimated hours of the version.
                          spent_hours:
                            type: number
                            description: The spent hours of the version.
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/wiki.json:
    get:
      tags:
        - wiki
      description: |
        Returns the details of the root wiki page.
      operationId: wiki#show-root
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: &ref_67
            type: string
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `attachments`.
          schema: &ref_69
            type: array
            items:
              type: string
              enum:
                - attachments
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the wiki with the specified ID.
          content: &ref_70
            application/json:
              schema:
                type: object
                properties:
                  wiki_page:
                    description: |
                      A single wiki.
                    allOf: &ref_103
                      - description: |
                          A single wiki.
                        type: object
                        properties: &ref_68
                          title:
                            type: string
                            description: The title of the wiki.
                          parent:
                            type: object
                            properties:
                              title:
                                type: string
                                description: The parent title of the wiki.
                          version:
                            type: integer
                            description: The version of the wiki.
                          created_on:
                            type: string
                            format: date-time
                            description: The date and time when the wiki was created.
                          updated_on:
                            type: string
                            format: date-time
                            description: The date and time when the wiki was last updated.
                      - type: object
                        properties:
                          text:
                            type: string
                            description: The text of the wiki.
                          author:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The ID of the author.
                              name:
                                type: string
                                description: The name of the author.
                          comments:
                            type: string
                            description: The comments of the wiki.
                          attachments:
                            type: array
                            items: *ref_30
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/wiki/index.json:
    get:
      tags:
        - wiki
      description: Returns a list of all pages in the project wiki.
      operationId: wiki#index
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_67
      responses:
        '200':
          description: |
            Returns a list of wikis.
          content:
            application/json:
              schema:
                type: object
                properties:
                  wiki_pages:
                    type: array
                    items:
                      description: |
                        A single wiki.
                      type: object
                      properties: *ref_68
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/wiki/{id}.json:
    get:
      tags:
        - wiki
      description: |
        Returns the details of a wiki page with the specified ID.
      operationId: wiki#show
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_67
        - name: id
          in: path
          description: |
            The title of the wiki.
          required: true
          schema: &ref_71
            type: string
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `attachments`.
          schema: *ref_69
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the wiki with the specified ID.
          content: *ref_70
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    patch:
      tags:
        - wiki
      description: |
        Creates or updates a wiki page with the specified ID.
      operationId: wiki#update-patch
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_67
        - name: id
          in: path
          description: |
            The title of the wiki.
          required: true
          schema: *ref_71
      requestBody:
        description: |
          The wiki to create or update.
        content: &ref_72
          application/json:
            schema:
              type: object
              properties:
                wiki_page:
                  description: |
                    A single wiki.
                  type: object
                  properties:
                    text:
                      type: string
                      description: The text of the wiki.
                    comments:
                      type: string
                      description: The comment of the wiki.
                    version:
                      type: integer
                      description: The version of the wiki.
                    parent_title:
                      type: string
                      description: The parent title of the wiki.
        required: true
      responses:
        '201':
          description: |
            Returns the wiki with the specified ID.
          content: *ref_70
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '409':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - wiki
      description: |
        Creates or updates a wiki page with the specified ID.
      operationId: wiki#update-put
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_67
        - name: id
          in: path
          description: |
            The title of the wiki.
          required: true
          schema: *ref_71
      requestBody:
        description: |
          The wiki to create or update.
        content: *ref_72
        required: true
      responses:
        '201':
          description: |
            Returns the wiki with the specified ID.
          content: *ref_70
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '409':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    delete:
      tags:
        - wiki
      description: |
        Deletes a wiki page, its attachments and its history with the specified ID.
        If the deleted page is a parent page, its child pages are not deleted but changed as root pages.
      operationId: wiki#destroy
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_67
        - name: id
          in: path
          description: |
            The title of the wiki.
          required: true
          schema: *ref_71
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/wiki/{id}.pdf:
    get:
      tags:
        - wiki
      description: |
        Returns the details of a wiki page with the specified ID.
      operationId: wiki#show-pdf
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_67
        - name: id
          in: path
          description: |
            The title of the wiki.
          required: true
          schema: *ref_71
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `attachments`.
          schema: *ref_69
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the wiki with the specified ID.
          content: &ref_74
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/wiki/{id}.txt:
    get:
      tags:
        - wiki
      description: |
        Returns the details of a wiki page with the specified ID.
      operationId: wiki#show-txt
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_67
        - name: id
          in: path
          description: |
            The title of the wiki.
          required: true
          schema: *ref_71
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `attachments`.
          schema: *ref_69
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the wiki with the specified ID.
          content: &ref_75
            text/plain:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/wiki/{id}/{version}.json:
    get:
      tags:
        - wiki
      description: |
        Returns the details of an old version of a wiki page with the specified ID.
      operationId: wiki#show-version
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_67
        - name: id
          in: path
          description: |
            The title of the wiki.
          required: true
          schema: *ref_71
        - name: version
          in: path
          description: |
            The version of the wiki.
          required: true
          schema: &ref_73
            type: integer
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `attachments`.
          schema: *ref_69
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the wiki with the specified ID.
          content: *ref_70
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/wiki/{id}/{version}.pdf:
    get:
      tags:
        - wiki
      description: |
        Returns the details of an old version of a wiki page with the specified ID.
      operationId: wiki#show-version-pdf
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_67
        - name: id
          in: path
          description: |
            The title of the wiki.
          required: true
          schema: *ref_71
        - name: version
          in: path
          description: |
            The version of the wiki.
          required: true
          schema: *ref_73
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `attachments`.
          schema: *ref_69
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the wiki with the specified ID.
          content: *ref_74
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /projects/{project_id}/wiki/{id}/{version}.txt:
    get:
      tags:
        - wiki
      description: |
        Returns the details of an old version of a wiki page with the specified ID.
      operationId: wiki#show-version-txt
      parameters:
        - name: project_id
          in: path
          description: |
            The ID or identifier of the project.
          required: true
          schema: *ref_67
        - name: id
          in: path
          description: |
            The title of the wiki.
          required: true
          schema: *ref_71
        - name: version
          in: path
          description: |
            The version of the wiki.
          required: true
          schema: *ref_73
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `attachments`.
          schema: *ref_69
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the wiki with the specified ID.
          content: *ref_75
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /queries.json:
    get:
      tags:
        - queries
      description: Returns a list of all queries.
      operationId: queries#index
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
      responses:
        '200':
          description: |
            Returns a list of queries.
          content:
            application/json:
              schema:
                type: object
                properties:
                  queries:
                    type: array
                    items:
                      description: |
                        Represents a single query.
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The unique identifier of the query.
                        name:
                          type: string
                          description: The name of the query.
                        is_public:
                          type: boolean
                          description: Whether the query is public.
                        project_id:
                          type: integer
                          description: The unique identifier of the project.
                  total_count:
                    type: integer
                    description: |
                      The total number of queries returned.
                  offset:
                    type: integer
                    description: |
                      The offset of the first query in the result set.
                  limit:
                    type: integer
                    description: |
                      The maximum number of queries returned in the result set.
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /relations/{id}.json:
    get:
      tags:
        - issue_relations
      description: |
        Returns the relation with the specified ID.
      operationId: issue_relations#show
      parameters:
        - name: id
          in: path
          description: |
            The ID of the relation.
          required: true
          schema: &ref_77
            type: integer
      responses:
        '200':
          description: |
            Returns the relation with the specified ID.
          content: *ref_76
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    delete:
      tags:
        - issue_relations
      description: |
        Deletes the relation with the specified ID.
      operationId: issue_relations#destroy
      parameters:
        - name: id
          in: path
          description: |
            The ID of the relation.
          required: true
          schema: *ref_77
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /roles.json:
    get:
      tags:
        - roles
      description: Returns a list of all roles.
      operationId: roles#index
      responses:
        '200':
          description: |
            Returns a list of all roles.
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      description: |
                        Represents a single role.
                      type: object
                      properties: &ref_78
                        id:
                          type: integer
                          description: The unique identifier of the role.
                        name:
                          type: string
                          description: The name of the role.
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /roles/{id}.json:
    get:
      tags:
        - roles
      description: |
        Returns the role with the specified ID.
      operationId: roles#show
      parameters:
        - name: id
          in: path
          description: |
            The ID of the role.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: |
            Returns the role with the specified ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    description: |
                      Represents a single role with additional details.
                    allOf: &ref_104
                      - description: |
                          Represents a single role.
                        type: object
                        properties: *ref_78
                      - type: object
                        properties:
                          assignable:
                            type: boolean
                            description: Whether the role is assignable.
                          issues_visibility:
                            type: string
                            description: The visibility of issues for this role.
                          time_entries_visibility:
                            type: string
                            description: The time entries visibility of the role.
                          users_visibility:
                            type: string
                            description: The users visibility of the role.
                          permissions:
                            type: array
                            items:
                              type: string
                              description: The permission of the role.
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /search.json:
    get:
      tags:
        - search
      description: Returns search results based on the specified query parameters.
      operationId: search#index
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: q
          in: query
          description: |
            Query string. Multiple values can be specified, separated by a space (" ").
          required: true
          schema: *ref_79
        - name: query
          in: query
          schema: *ref_80
      responses:
        '200':
          description: |
            Returns a list of search results.
          content: *ref_81
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /time_entries.csv:
    get:
      tags:
        - timelog
      description: Returns a list of time entries.
      operationId: timelog#index-csv
      parameters:
        - name: query
          in: query
          schema: *ref_60
      responses:
        '200':
          description: |
            Returns a list of time entries.
          content: *ref_82
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /time_entries.json:
    get:
      tags:
        - timelog
      description: Returns a list of time entries.
      operationId: timelog#index
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: query
          in: query
          schema: *ref_60
      responses:
        '200':
          description: |
            Returns a list of time entries.
          content: *ref_83
        '401':
          description: not provided
        '403':
          description: not provided
    post:
      tags:
        - timelog
      description: Creates a new time entry.
      operationId: timelog#create
      requestBody:
        description: |
          The time entry to create or update.
        content: *ref_62
        required: true
      responses:
        '201':
          description: |
            Returns the time entry with the specified ID.
          content: *ref_63
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /time_entries/{id}.json:
    get:
      tags:
        - timelog
      description: |
        Returns the time entry with the specified ID.
      operationId: timelog#show
      parameters:
        - name: id
          in: path
          description: |
            The ID of the time entry.
          required: true
          schema: &ref_84
            type: integer
      responses:
        '200':
          description: |
            Returns the time entry with the specified ID.
          content: *ref_63
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    patch:
      tags:
        - timelog
      description: |
        Updates the time entry with the specified ID.
      operationId: timelog#update-patch
      parameters:
        - name: id
          in: path
          description: |
            The ID of the time entry.
          required: true
          schema: *ref_84
      requestBody:
        description: |
          The time entry to create or update.
        content: *ref_62
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - timelog
      description: |
        Updates the time entry with the specified ID.
      operationId: timelog#update-put
      parameters:
        - name: id
          in: path
          description: |
            The ID of the time entry.
          required: true
          schema: *ref_84
      requestBody:
        description: |
          The time entry to create or update.
        content: *ref_62
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    delete:
      tags:
        - timelog
      description: |
        Deletes the time entry with the specified ID.
      operationId: timelog#destroy
      parameters:
        - name: id
          in: path
          description: |
            The ID of the time entry.
          required: true
          schema: *ref_84
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /trackers.json:
    get:
      tags:
        - trackers
      description: Returns a list of all trackers.
      operationId: trackers#index
      responses:
        '200':
          description: |
            Returns a list of all trackers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  trackers:
                    type: array
                    items:
                      description: |
                        Represents a single tracker.
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The unique identifier of the tracker.
                        name:
                          type: string
                          description: The name of the tracker.
                        default_status:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: |
                                The unique identifier of the default status.
                            name:
                              type: string
                              description: |
                                The name of the default status.
                        description:
                          type: string
                          description: A description of the tracker.
                        enabled_standard_fields:
                          type: array
                          items:
                            type: string
                            description: The name of the enabled standard field.
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /uploads.json:
    post:
      tags:
        - attachments
      description: Creates a new attachment.
      operationId: attachments#upload
      parameters:
        - name: filename
          in: query
          description: The filename of the attachment.
          schema:
            type: string
        - name: content_type
          in: query
          description: The content type of the attachment.
          schema:
            type: string
      requestBody:
        description: The attachment object to upload.
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: true
      responses:
        '201':
          description: Returns a single uploaded attachment object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  upload:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the attachment.
                      token:
                        type: string
                        description: The token of the attachment.
        '401':
          description: not provided
        '403':
          description: not provided
        '406':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /users.csv:
    get:
      tags:
        - users
      description: Returns a list of all users in CSV format.
      operationId: users#index-csv
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: query
          in: query
          schema: &ref_85
            type: object
            properties:
              status:
                type: string
                description: |
                  The expression of status of the user.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
                  Possible values are:
                  - `1`: active
                  - `2`: registered
                  - `3`: locked

                  examples:
                  - active or locked: `1|3`
                  - not locked: `!3`
              auth_source_id:
                type: string
                description: |
                  The expression of auth source id of the user.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              is_member_of_group:
                type: string
                description: |
                  The expression of group id of the user.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              twofa_scheme:
                type: string
                description: |
                  The expression of 2FA scheme id of the user.
                  The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              name:
                type: string
                description: |
                  The expression of name of the user.
                  The expression format is "\<operator>\<value>".
                  examples:
                  - contains "test": `~test`
                  - not contains "test": `!~test`
              login:
                type: string
                description: |
                  The expression of login of the user.
                  The expression format is "\<operator>\<value>".
              firstname:
                type: string
                description: |
                  The expression of firstname of the user.
                  The expression format is "\<operator>\<value>".
              lastname:
                type: string
                description: |
                  The expression of lastname of the user.
                  The expression format is "\<operator>\<value>".
              mail:
                type: string
                description: |
                  The expression of mail of the user.
                  The expression format is "\<operator>\<value>".
              created_on:
                type: string
                description: |
                  The expression of created_on of the user.
                  The expression format is "[operator]\<value>".
                  examples:
                  - last week : `lw`
                  - before "2025/7/12": `<=2025-07-12`
              last_login_on:
                type: string
                description: |
                  The expression of last_login_on of the user.
                  The expression format is "[operator]\<value>".
                  examples:
                  - last week : `lw`
                  - before "2025/7/12": `<=2025-07-12`
              admin:
                type: string
                description: |
                  The expression of administrative of the user.
                  The expression format is "\<operator>\<values>". Values should be separated by a pipe "|".
                  Possible values are:
                  - `0`: no
                  - `1`: yes

                  examples:
                  - administrator: `1`
                  - non administrator: `0`
            additionalProperties:
              type: string
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `auth_source`, `memberships`, `groups`.
          schema: &ref_86
            type: array
            items:
              type: string
              enum:
                - auth_source
                - memberships
                - groups
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns a list of users.
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /users.json:
    get:
      tags:
        - users
      description: Returns a list of all users.
      operationId: users#index
      parameters:
        - name: X-Redmine-Nometa
          in: header
          description: |
            If set to 1, the response will not include metadata information.
          schema: *ref_11
        - name: pagination
          in: query
          description: |
            Pagination parameters to control the number of items returned in the response.
            If not specified, it defaults to 25 items per page.
          schema: *ref_12
        - name: query
          in: query
          schema: *ref_85
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `auth_source`, `memberships`, `groups`.
          schema: *ref_86
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns a list of users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      description: |
                        A single user.
                      type: object
                      properties: &ref_89
                        id:
                          type: integer
                          description: The ID of the user.
                        login:
                          type: string
                          description: The login of the user.
                        admin:
                          type: boolean
                          description: The administrative of the user.
                        firstname:
                          type: string
                          description: The firstname of the user.
                        lastname:
                          type: string
                          description: The lastname of the user.
                        mail:
                          type: string
                          description: The mail of the user.
                        created_on:
                          type: string
                          format: date-time
                          description: The date and time when the user was created.
                        updated_on:
                          type: string
                          format: date-time
                          description: The date and time when the user was last updated.
                        last_login_on:
                          type: string
                          format: date-time
                          description: The date and time when the user was last logon.
                        passwd_changed_on:
                          type: string
                          format: date-time
                          description: The date and time when the user was change password.
                        avatar_url:
                          type: string
                          description: The avatar URL of the user.
                        twofa_scheme:
                          type: string
                          description: The 2FA scheme of the user.
                        status:
                          type: integer
                          description: |
                            The status of the user. Possible values are:
                            - `0`: anonymous
                            - `1`: active
                            - `2`: registered
                            - `3`: locked
                        auth_source:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the auth source.
                            name:
                              type: string
                              description: The name of the auth source.
                        custom_fields:
                          type: array
                          items:
                            type: object
                            properties: *ref_6
                  total_count:
                    type: integer
                    description: The total number of users.
                  offset:
                    type: integer
                    description: The offset of the first user in the list.
                  limit:
                    type: integer
                    description: The maximum number of users returned in the list.
        '401':
          description: not provided
        '403':
          description: not provided
    post:
      tags:
        - users
      description: Creates a new user.
      operationId: users#create
      requestBody:
        description: |
          The user to create or update.
        content: &ref_92
          application/json:
            schema:
              type: object
              properties:
                user:
                  description: |
                    A single user.
                  type: object
                  properties: *ref_87
                send_information:
                  type: boolean
                  description: |
                    If set to true, an email will be sent to the user with their login information.
                pref:
                  description: |
                    The preferences of the user.
                  type: object
                  properties: *ref_88
        required: true
      responses:
        '201':
          description: |
            Returns the user with the specified ID.
          content: &ref_90
            application/json:
              schema:
                type: object
                properties:
                  user:
                    description: |
                      A single user.
                    allOf: &ref_105
                      - description: |
                          A single user.
                        type: object
                        properties: *ref_89
                      - type: object
                        properties:
                          api_key:
                            type: string
                            description: The API key of the user.
                          groups:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the group.
                                name:
                                  type: string
                                  description: The name of the group.
                          memberships:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the mebership.
                                project:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the project.
                                    name:
                                      type: string
                                      description: The name of the project.
                                roles:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the role.
                                      name:
                                        type: string
                                        description: The name of the role.
                                      inherited:
                                        type: boolean
                                        description: Whether the role is inherited from a parent project.
        '401':
          description: not provided
        '403':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /users/{id}.json:
    get:
      tags:
        - users
      description: |
        Returns the user with the specified ID.
        Use /users/current.json to retrieve the user whose credentials is used to access the API.
      operationId: users#show
      parameters:
        - name: id
          in: path
          description: |
            The ID or `current` of the user.
          required: true
          schema: &ref_91
            type: string
        - name: include
          in: query
          description: |
            fetch associated data (optional).
            Possible values: `auth_source`, `memberships`, `groups`.
          schema: *ref_86
          style: form
          explode: false
      responses:
        '200':
          description: |
            Returns the user with the specified ID.
          content: *ref_90
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    patch:
      tags:
        - users
      description: |
        Updates the user with the specified ID.
        Use /users/current.json to update the user whose credentials is used to access the API.
      operationId: users#update-patch
      parameters:
        - name: id
          in: path
          description: |
            The ID or `current` of the user.
          required: true
          schema: *ref_91
      requestBody:
        description: |
          The user to create or update.
        content: *ref_92
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - users
      description: |
        Updates the user with the specified ID.
        Use /users/current.json for retrieving the user whose credentials is used to access the API.
      operationId: users#update-put
      parameters:
        - name: id
          in: path
          description: |
            The ID or `current` of the user.
          required: true
          schema: *ref_91
      requestBody:
        description: |
          The user to create or update.
        content: *ref_92
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    delete:
      tags:
        - users
      description: |
        Deletes the user with the specified ID.
      operationId: users#destroy
      parameters:
        - name: id
          in: path
          description: |
            The ID or `current` of the user.
          required: true
          schema: *ref_91
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /watchers.json:
    post:
      tags:
        - watchers
      description: Creates a new watcher.
      operationId: watchers#create
      requestBody:
        description: |
          The watcher to create.
        content: *ref_93
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    delete:
      tags:
        - watchers
      description: |
        Deletes the watcher with the specified ID.
      operationId: watchers#destroy
      parameters:
        - name: object_type
          in: query
          description: |
            The type of the object to be watched.
          required: true
          schema:
            type: string
        - name: object_id
          in: query
          description: |
            The ID of the object.
          required: true
          schema:
            type: integer
        - name: user_id
          in: query
          description: |
            The ID of the user.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /versions/{id}.txt:
    get:
      tags:
        - versions
      description: |
        Returns the version with the specified ID.
      operationId: versions#show-txt
      parameters:
        - name: id
          in: path
          description: |
            The ID of the version.
          required: true
          schema: &ref_94
            type: integer
      responses:
        '200':
          description: |
            Returns the version with the specified ID.
          content:
            text/plain:
              schema:
                type: string
                format: binary
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
  /versions/{id}.json:
    get:
      tags:
        - versions
      description: |
        Returns the version with the specified ID.
      operationId: versions#show
      parameters:
        - name: id
          in: path
          description: |
            The ID of the version.
          required: true
          schema: *ref_94
      responses:
        '200':
          description: |
            Returns the version with the specified ID.
          content: *ref_95
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
    patch:
      tags:
        - versions
      description: |
        Updates the version with the specified ID.
      operationId: versions#update-patch
      parameters:
        - name: id
          in: path
          description: |
            The ID of the version.
          required: true
          schema: *ref_94
      requestBody:
        description: |
          The version to create or update.
        content: *ref_96
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    put:
      tags:
        - versions
      description: |
        Updates the version with the specified ID.
      operationId: versions#update-put
      parameters:
        - name: id
          in: path
          description: |
            The ID of the version.
          required: true
          schema: *ref_94
      requestBody:
        description: |
          The version to create or update.
        content: *ref_96
        required: true
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: |
            The request was well-formed but was unable to be followed due to semantic errors.
          content: *ref_4
    delete:
      tags:
        - versions
      description: |
        Deletes the version with the specified ID.
      operationId: versions#destroy
      parameters:
        - name: id
          in: path
          description: |
            The ID of the version.
          required: true
          schema: *ref_94
      responses:
        '204':
          description: not provided
        '401':
          description: not provided
        '403':
          description: not provided
        '404':
          description: not provided
        '422':
          description: not provided
    parameters:
      - name: X-Redmine-Switch-User
        in: header
        description: |
          This only works when using the API with an administrator account,
          this header will be ignored when using the API with a regular user account.
        schema: *ref_2
components:
  schemas:
    group_detail:
      description: |
        A single group.
      allOf: *ref_97
    issue_detail:
      description: |
        A single issue.
      allOf: *ref_98
    news_detail:
      description: |
        A single news.
      allOf: *ref_99
    project_detail:
      description: |
        A single project.
      allOf: *ref_100
    file:
      description: Represents a single file.
      allOf: *ref_101
    version_detail:
      description: |
        A single version.
      allOf: *ref_102
    wiki_detail:
      description: |
        A single wiki.
      allOf: *ref_103
    role_detail:
      description: |
        Represents a single role with additional details.
      allOf: *ref_104
    user_detail:
      description: |
        A single user.
      allOf: *ref_105
  responses:
    unprocessable_entity:
      description: |
        The request was well-formed but was unable to be followed due to semantic errors.
      content: *ref_4
    error:
      description: |
        An error occurred while processing the request.
      content:
        application/json:
          schema:
            description: |
              A single error that occurred during the request.
            type: object
            properties:
              status:
                type: integer
                description: The HTTP status code of the error.
              error:
                type: string
                description: A description of the error.
  securitySchemes:
    ApiKeyHeaderAuth:
      type: apiKey
      in: header
      name: X-Redmine-API-Key
    ApiKeyQueryAuth:
      type: apiKey
      in: query
      name: key
    BasicAuth:
      type: http
      scheme: basic
