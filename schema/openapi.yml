openapi: 3.0.3
info:
  title: Redmine OpenAPI Specification
  version: 6.0.0
servers:
  - url: http://127.0.0.1:3000
paths:
  /attachments/download/{id}:
    $ref: "./attachments.yml#/paths/~1attachments~1download~1{id}"
  /attachments/thumbnail/{id}:
    $ref: "./attachments.yml#/paths/~1attachments~1thumbnail~1{id}"
  /attachments/thumbnail/{id}/{size}:
    $ref: "./attachments.yml#/paths/~1attachments~1thumbnail~1{id}~1{size}"
  /attachments/{id}.json:
    $ref: "./attachments.yml#/paths/~1attachments~1{id}.json"
  /attachments/{object_type}/{object_id}/download.zip:
    $ref: "./attachments.yml#/paths/~1attachments~1{object_type}~1{object_id}~1download.zip"
  /custom_fields.json:
    $ref: "./custom_fields.yml#/paths/~1custom_fields.json"
  /enumerations/document_categories.json:
    $ref: "./enumerations.yml#/paths/~1enumerations~1document_categories.json"
  /enumerations/issue_priorities.json:
    $ref: "./enumerations.yml#/paths/~1enumerations~1issue_priorities.json"
  /enumerations/time_entry_activities.json:
    $ref: "./enumerations.yml#/paths/~1enumerations~1time_entry_activities.json"
  /groups.json:
    $ref: "./groups.yml#/paths/~1groups.json"
  /groups/{id}.json:
    $ref: "./groups.yml#/paths/~1groups~1{id}.json"
  /groups/{id}/users.json:
    $ref: "./groups.yml#/paths/~1groups~1{id}~1users.json"
  /groups/{id}/users/{user_id}.json:
    $ref: "./groups.yml#/paths/~1groups~1{id}~1users~1{user_id}.json"
  /issues.csv:
    $ref: "./issues.yml#/paths/~1issues.csv"
  /issues.json:
    $ref: "./issues.yml#/paths/~1issues.json"
  /issues.pdf:
    $ref: "./issues.yml#/paths/~1issues.pdf"
  /issues/gantt.pdf:
    $ref: "./gantts.yml#/paths/~1issues~1gantt.pdf"
  /issues/gantt.png:
    $ref: "./gantts.yml#/paths/~1issues~1gantt.png"
  /issues/{id}.json:
    $ref: "./issues.yml#/paths/~1issues~1{id}.json"
  /issues/{id}.pdf:
    $ref: "./issues.yml#/paths/~1issues~1{id}.pdf"
  /issues/{issue_id}/relations.json:
    $ref: "./issue_relations.yml#/paths/~1issues~1{issue_id}~1relations.json"
  /issues/{issue_id}/time_entries.json:
    $ref: "./timelog.yml#/paths/~1issues~1{issue_id}~1time_entries.json"
  /issues/{issue_id}/watchers.json:
    $ref: "./watchers.yml#/paths/~1issues~1{issue_id}~1watchers.json"
  /issues/{issue_id}/watchers/{user_id}.json:
    $ref: "./watchers.yml#/paths/~1issues~1{issue_id}~1watchers~1{user_id}.json"
  /issue_categories/{id}.json:
    $ref: "./issue_categories.yml#/paths/~1issue_categories~1{id}.json"
  /issue_statuses.json:
    $ref: "./issue_statuses.yml#/paths/~1issue_statuses.json"
  /journals/{id}.json:
    $ref: "./journals.yml#/paths/~1journals~1{id}.json"
  /memberships/{id}.json:
    $ref: "./members.yml#/paths/~1memberships~1{id}.json"
  /my/account.json:
    $ref: "./my.yml#/paths/~1my~1account.json"
  /news.json:
    $ref: "./news.yml#/paths/~1news.json"
  /news/{id}.json:
    $ref: "./news.yml#/paths/~1news~1{id}.json"
  /projects.csv:
    $ref: "./projects.yml#/paths/~1projects.csv"
  /projects.json:
    $ref: "./projects.yml#/paths/~1projects.json"
  /projects/{id}.json:
    $ref: "./projects.yml#/paths/~1projects~1{id}.json"
  /projects/{id}/archive.json:
    $ref: "./projects.yml#/paths/~1projects~1{id}~1archive.json"
  /projects/{project_id}/files.json:
    $ref: "./files.yml#/paths/~1projects~1{project_id}~1files.json"
  /projects/{id}/unarchive.json:
    $ref: "./projects.yml#/paths/~1projects~1{id}~1unarchive.json"
  /projects/{project_id}/issues.csv:
    $ref: "./issues.yml#/paths/~1projects~1{project_id}~1issues.csv"
  /projects/{project_id}/issues.json:
    $ref: "./issues.yml#/paths/~1projects~1{project_id}~1issues.json"
  /projects/{project_id}/issues.pdf:
    $ref: "./issues.yml#/paths/~1projects~1{project_id}~1issues.pdf"
  /projects/{project_id}/issue_categories.json:
    $ref: "./issue_categories.yml#/paths/~1projects~1{project_id}~1issue_categories.json"
  /projects/{project_id}/issues/gantt.pdf:
    $ref: "./gantts.yml#/paths/~1projects~1{project_id}~1issues~1gantt.pdf"
  /projects/{project_id}/issues/gantt.png:
    $ref: "./gantts.yml#/paths/~1projects~1{project_id}~1issues~1gantt.png"
  /projects/{project_id}/memberships.json:
    $ref: "./members.yml#/paths/~1projects~1{project_id}~1memberships.json"
  /projects/{project_id}/news.json:
    $ref: "./news.yml#/paths/~1projects~1{project_id}~1news.json"
  /projects/{id}/repository/{repository_id}/revisions/{rev}/issues.json:
    $ref: "./repositories.yml#/paths/~1projects~1{id}~1repository~1{repository_id}~1revisions~1{rev}~1issues.json"
  /projects/{id}/repository/{repository_id}/revisions/{rev}/issues/{issue_id}.json:
    $ref: "./repositories.yml#/paths/~1projects~1{id}~1repository~1{repository_id}~1revisions~1{rev}~1issues~1{issue_id}.json"
  /projects/{project_id}/search.json:
    $ref: "./search.yml#/paths/~1projects~1{project_id}~1search.json"
  /projects/{project_id}/time_entries.csv:
    $ref: "./timelog.yml#/paths/~1projects~1{project_id}~1time_entries.csv"
  /projects/{project_id}/time_entries.json:
    $ref: "./timelog.yml#/paths/~1projects~1{project_id}~1time_entries.json"
  /projects/{project_id}/versions.json:
    $ref: "./versions.yml#/paths/~1projects~1{project_id}~1versions.json"
  /projects/{project_id}/wiki.json:
    $ref: "./wiki.yml#/paths/~1projects~1{project_id}~1wiki.json"
  /projects/{project_id}/wiki/index.json:
    $ref: "./wiki.yml#/paths/~1projects~1{project_id}~1wiki~1index.json"
  /projects/{project_id}/wiki/{id}.json:
    $ref: "./wiki.yml#/paths/~1projects~1{project_id}~1wiki~1{id}.json"
  /projects/{project_id}/wiki/{id}.pdf:
    $ref: "./wiki.yml#/paths/~1projects~1{project_id}~1wiki~1{id}.pdf"
  /projects/{project_id}/wiki/{id}.txt:
    $ref: "./wiki.yml#/paths/~1projects~1{project_id}~1wiki~1{id}.txt"
  /projects/{project_id}/wiki/{id}/{version}.json:
    $ref: "./wiki.yml#/paths/~1projects~1{project_id}~1wiki~1{id}~1{version}.json"
  /projects/{project_id}/wiki/{id}/{version}.pdf:
    $ref: "./wiki.yml#/paths/~1projects~1{project_id}~1wiki~1{id}~1{version}.pdf"
  /projects/{project_id}/wiki/{id}/{version}.txt:
    $ref: "./wiki.yml#/paths/~1projects~1{project_id}~1wiki~1{id}~1{version}.txt"
  /queries.json:
    $ref: "./queries.yml#/paths/~1queries.json"
  /relations/{id}.json:
    $ref: "./issue_relations.yml#/paths/~1relations~1{id}.json"
  /roles.json:
    $ref: "./roles.yml#/paths/~1roles.json"
  /roles/{id}.json:
    $ref: "./roles.yml#/paths/~1roles~1{id}.json"
  /search.json:
    $ref: "./search.yml#/paths/~1search.json"
  /time_entries.csv:
    $ref: "./timelog.yml#/paths/~1time_entries.csv"
  /time_entries.json:
    $ref: "./timelog.yml#/paths/~1time_entries.json"
  /time_entries/{id}.json:
    $ref: "./timelog.yml#/paths/~1time_entries~1{id}.json"
  /trackers.json:
    $ref: "./trackers.yml#/paths/~1trackers.json"
  /uploads.json:
    $ref: "./attachments.yml#/paths/~1uploads.json"
  /users.csv:
    $ref: "./users.yml#/paths/~1users.csv"
  /users.json:
    $ref: "./users.yml#/paths/~1users.json"
  /users/{id}.json:
    $ref: "./users.yml#/paths/~1users~1{id}.json"
  /watchers.json:
    $ref: "./watchers.yml#/paths/~1watchers.json"
  /versions/{id}.txt:
    $ref: "./versions.yml#/paths/~1versions~1{id}.txt"
  /versions/{id}.json:
    $ref: "./versions.yml#/paths/~1versions~1{id}.json"
components:
  schemas:
    custom_field:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the custom field.
        name:
          type: string
          description: The name of the custom field.
        multiple:
          type: boolean
          description: Whether the custom field can have multiple values.
        value: {}
    custom_field_values:
      type: object
      description: |
        The values of the custom fields.
      additionalProperties: true
    errors:
      description: |
        A list of errors that occurred during the request.
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
    error:
      description: |
        A single error that occurred during the request.
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code of the error.
        error:
          type: string
          description: A description of the error.
  responses:
    no_content:
      description: not provided
    unprocessable_entity:
      description: |
        The request was well-formed but was unable to be followed due to semantic errors.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/errors"
    error:
      description: |
        An error occurred while processing the request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/error"
  parameters:
    # User Impersonation
    X-Redmine-Switch-User:
      name: X-Redmine-Switch-User
      in: header
      description: |
        This only works when using the API with an administrator account,
        this header will be ignored when using the API with a regular user account.
      schema:
        type: string
    # Collection resources and paginatio
    X-Redmine-Nometa:
      name: X-Redmine-Nometa
      in: header
      description: |
        If set to 1, the response will not include metadata information.
      schema:
        type: integer
        enum: [1]
    nometa:
      name: nometa
      in: query
      description: |
        If set to 1, the response will not include metadata information.
      schema:
        type: integer
        enum: [1]
    pagination:
      name: pagination
      in: query
      description: |
        Pagination parameters to control the number of items returned in the response.
        If not specified, it defaults to 25 items per page.
      schema:
        type: object
        properties:
          offset:
            type: integer
            description: |
              The offset of the first object to retrieve
              If not specified, it defaults to 0.
            default: 0
          limit:
            type: integer
            description: |
              The number of items to be present in the response.
              If not specified, it defaults to 25.
            default: 25
            maximum: 100
          nometa:
            type: integer
            description: |
              If set to 1, the response will not include pagination information.
            enum: [1]
  securitySchemes:
    # Authentication
    ApiKeyHeaderAuth:
      type: apiKey
      in: header
      name: X-Redmine-API-Key
    ApiKeyQueryAuth:
      type: apiKey
      in: query
      name: key
    BasicAuth:
      type: http
      scheme: basic
security:
  - ApiKeyHeaderAuth: []
  - ApiKeyQueryAuth: []
  - BasicAuth: []
tags:
  - name: attachments
    description: attachments_controller's API
  - name: custom_fields
    description: custom_fields_controller's API
  - name: enumerations
    description: enumerations_controller's API
  - name: files
    description: files_controller's API
  - name: gantts
    description: gantts_controller's API
  - name: groups
    description: groups_controller's API
  - name: issues
    description: issues_controller's API
  - name: issue_categories
    description: issue_categories_controller's API
  - name: issue_relations
    description: issue_relations_controller's API
  - name: issue_statuses
    description: issue_statuses_controller's API
  - name: journals
    description: journals_controller's API
  - name: members
    description: members_controller's API
  - name: my
    description: my_controller's API
  - name: news
    description: news_controller's API
  - name: projects
    description: projects_controller's API
  - name: queries
    description: queries_controller's API
  - name: repositories
    description: repositories_controller's API
  - name: roles
    description: roles_controller's API
  - name: search
    description: search_controller's API
  - name: timelog
    description: timelog_controller's API
  - name: trackers
    description: trackers_controller's API
  - name: users
    description: users_controller's API
  - name: versions
    description: versions_controller's API
  - name: watchers
    description: watchers_controller's API
  - name: wiki
    description: wiki_controller's API
