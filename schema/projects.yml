paths:
  /projects.json:
    get:
      tags: ["projects"]
      description: |
        Returns all projects (including all public projects and private projects to which the user has access).
      operationId: projects#index
      parameters:
        - $ref: "./openapi.yml#/components/parameters/X-Redmine-Nometa"
        - $ref: "./openapi.yml#/components/parameters/pagination"
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          $ref: "#/components/responses/projects"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
    post:
      tags: ["projects"]
      description: |
        Creates a new project.
      operationId: projects#create
      requestBody:
        $ref: "#/components/requestBody/project"
      responses:
        "201":
          $ref: "#/components/responses/project"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "422":
          $ref: "./openapi.yml#/components/responses/unprocessable_entity"
    parameters:
      - $ref: "./openapi.yml#/components/parameters/X-Redmine-Switch-User"
  /projects/{id}.json:
    get:
      tags: ["projects"]
      description: |
        Returns the project with the specified ID or identifier.
      operationId: projects#show
      parameters:
        - $ref: "#/components/parameters/id"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          $ref: "#/components/responses/project"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
    patch:
      tags: ["projects"]
      description: |
        Updates the project with the specified ID or identifier.
      operationId: projects#update-patch
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        $ref: "#/components/requestBody/project"
      responses:
        "204":
          $ref: "./openapi.yml#/components/responses/no_content"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
        "422":
          $ref: "./openapi.yml#/components/responses/unprocessable_entity"
    put:
      tags: ["projects"]
      description: |
        Updates the project with the specified ID or identifier.
      operationId: projects#update-put
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        $ref: "#/components/requestBody/project"
      responses:
        "204":
          $ref: "./openapi.yml#/components/responses/no_content"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
        "422":
          $ref: "./openapi.yml#/components/responses/unprocessable_entity"
    delete:
      tags: ["projects"]
      description: |
        Deletes the project with the specified ID or identifier.
      operationId: projects#destroy
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "./openapi.yml#/components/responses/no_content"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
    parameters:
      - $ref: "./openapi.yml#/components/parameters/X-Redmine-Switch-User"
  /projects/{id}/archive.json:
    post:
      tags: ["projects"]
      description: |
        Archives the project with the specified ID or identifier.
      operationId: projects#archive-post
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "./openapi.yml#/components/responses/no_content"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
        "422":
          $ref: "./openapi.yml#/components/responses/unprocessable_entity"
    put:
      tags: ["projects"]
      description: |
        Archives the project with the specified ID or identifier.
      operationId: projects#archive-put
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "./openapi.yml#/components/responses/no_content"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
        "422":
          $ref: "./openapi.yml#/components/responses/unprocessable_entity"
    parameters:
      - $ref: "./openapi.yml#/components/parameters/X-Redmine-Switch-User"
  /projects/{id}/close.json:
    post:
      tags: ["projects"]
      description: |
        Closes the project with the specified ID or identifier.
      operationId: projects#close-post
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "./openapi.yml#/components/responses/no_content"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
    put:
      tags: ["projects"]
      description: |
        Closes the project with the specified ID or identifier.
      operationId: projects#close-put
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "./openapi.yml#/components/responses/no_content"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
    parameters:
      - $ref: "./openapi.yml#/components/parameters/X-Redmine-Switch-User"
  /projects/{id}/reopen.json:
    post:
      tags: ["projects"]
      description: |
        Reopens the project with the specified ID or identifier.
      operationId: projects#reopen-post
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "./openapi.yml#/components/responses/no_content"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
    put:
      tags: ["projects"]
      description: |
        Reopens the project with the specified ID or identifier.
      operationId: projects#reopen-put
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "./openapi.yml#/components/responses/no_content"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
    parameters:
      - $ref: "./openapi.yml#/components/parameters/X-Redmine-Switch-User"
  /projects/{id}/unarchive.json:
    post:
      tags: ["projects"]
      description: |
        Unarchives the project with the specified ID or identifier.
      operationId: projects#unarchive-post
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "./openapi.yml#/components/responses/no_content"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
    put:
      tags: ["projects"]
      description: |
        Unarchives the project with the specified ID or identifier.
      operationId: projects#unarchive-put
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          $ref: "./openapi.yml#/components/responses/no_content"
        "401":
          $ref: "./openapi.yml#/components/responses/no_content"
        "403":
          $ref: "./openapi.yml#/components/responses/no_content"
        "404":
          $ref: "./openapi.yml#/components/responses/no_content"
    parameters:
      - $ref: "./openapi.yml#/components/parameters/X-Redmine-Switch-User"
components:
  schemas:
    project:
      description: |
        A single project.
      type: object
      required:
        - id
        - name
        - identifier
      properties:
        id:
          type: integer
          description: The ID of the project.
        name:
          type: string
          description: The name of the project.
        identifier:
          type: string
          description: The identifier of the project.
        description:
          type: string
          description: The description of the project.
        homepage:
          type: string
          description: The homepage URL of the project.
        parent:
          type: object
          description: |
            The parent project of the project. If the project has no parent, this will be `null`.
          properties:
            id:
              type: integer
              description: The ID of the parent project.
            name:
              type: string
              description: The name of the parent project.
        status:
          type: integer
          description: |
            The status of the project. Possible values are:
            - `1`: active
            - `5`: closed
            - `9`: archived
            - `10`: scheduled for deletion
        is_public:
          type: boolean
          description: The visibility of the project. `true` if the project is public, `false` if it is private.
        inherit_members:
          type: boolean
          description: |
            Whether the project inherits members from its parent project. `true` if it does, `false` if it does not.
        custom_fields:
          type: array
          items:
            $ref: "./openapi.yml#/components/schemas/custom_field"
        trackers:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the tracker.
              name:
                type: string
                description: The name of the tracker.
        issue_categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the issue category.
              name:
                type: string
                description: The name of the issue category.
        time_entry_activities:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the time entry activity.
              name:
                type: string
                description: The name of the time entry activity.
        enabled_modules:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the enabled module.
              name:
                type: string
                description: The name of the enabled module.
        issue_custom_fields:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the issue custom field.
              name:
                type: string
                description: The name of the issue custom field.
        created_on:
          type: string
          format: date-time
          description: The date and time when the project was created.
        updated_on:
          type: string
          format: date-time
          description: The date and time when the project was last updated.
    project_detail:
      description: |
        A single project.
      allOf:
        - $ref: "#/components/schemas/project"
        - type: object
          properties:
            default_version:
              type: object
              description: |
                The default version of the project. If the project has no default version, this will be `null`.
              properties:
                id:
                  type: integer
                  description: The ID of the default version.
                name:
                  type: string
                  description: The name of the default version.
            default_assignee:
              type: object
              description: |
                The default assignee of the project. If the project has no default assignee, this will be `null`.
              properties:
                id:
                  type: integer
                  description: The ID of the default assignee.
                name:
                  type: string
                  description: The name of the default assignee.
    project_new:
      description: |
        A single project.
      type: object
      properties:
        name:
          type: string
          description: The name of the project.
        description:
          type: string
          description: The description of the project.
        homepage:
          type: string
          description: The homepage URL of the project.
        identifier:
          type: string
          description: The identifier of the project.
        custom_field_values:
          $ref: "./openapi.yml#/components/schemas/custom_field_values"
        custom_fields:
          type: array
          items:
            $ref: "./openapi.yml#/components/schemas/custom_field"
        tracker_ids:
          type: array
          description: The IDs of the trackers associated with the project.
          items:
            type: integer
        issue_custom_field_ids:
          type: array
          description: The IDs of the issue custom fields associated with the project.
          items:
            type: integer
        parent_id:
          type: integer
          description: The ID of the parent project.
        default_version_id:
          type: integer
          description: The ID of the default version of the project.
        default_issue_query_id:
          type: integer
          description: The ID of the default issue query of the project
        default_assigned_to_id:
          type: integer
          description: The ID of the default assignee of the project.
        is_public:
          type: boolean
          description: The visibility of the project. `true` if the project is public, `false` if it is private.
        enabled_module_names:
          type: array
          description: The names of the enabled modules for the project.
          items:
            type: string
        inherit_members:
          type: boolean
          description: |
            Whether the project inherits members from its parent project. `true` if it does, `false` if it does not.
  responses:
    projects:
      description: |
        Returns all projects (including all public projects and private projects to which the user has access).
      content:
        application/json:
          schema:
            type: object
            properties:
              projects:
                type: array
                items:
                  $ref: "#/components/schemas/project"
              total_count:
                type: integer
                description: The total number of projects.
              offset:
                type: integer
                description: The offset of the first project in the list.
              limit:
                type: integer
                description: The maximum number of projects returned in the list.
    project:
      description: |
        Returns the project with the specified ID or identifier.
      content:
        application/json:
          schema:
            type: object
            properties:
              project:
                $ref: "#/components/schemas/project_detail"
  parameters:
    id:
      name: id
      in: path
      description: |
        The ID or identifier of the project.
      required: true
      schema:
        type: string
    include:
      name: include
      in: query
      description: |
        fetch associated data (optional). Values should be separated by a comma ",".
        Possible values: `trackers`, `issue_categories`, `enabled_modules`, `time_entry_activities`, `issue_custom_fields`.
      schema:
        type: array
        items:
          type: string
          enum:
            [
              trackers,
              issue_categories,
              enabled_modules,
              time_entry_activities,
              issue_custom_fields,
            ]
      style: form
      explode: false
    query:
      name: query
      in: query
      schema:
        type: object
        properties:
          status:
            type: string
            description: |
              The expression of status of the project.
              The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
              Possible values are:
              - `1`: active
              - `5`: closed

              examples:
              - active or closed: `1|5`
              - not closed: `!5`
          id:
            type: string
            description: |
              The expression of identifier of the project.
              The expression format is "[operator]\<values>". Values should be separated by a pipe "|".
          name:
            type: string
            description: |
              The expression of name of the project.
              The expression format is "\<operator>\<value>".
              examples:
              - contains "test": `~test`
              - not contains "test": `!~test`
          description:
            type: string
            description: |
              The expression of description of the project.
              The expression format is "\<operator>\<value>".
              examples:
              - contains "test": `~test`
              - not contains "test": `!~test`
          parent_id:
            type: string
            description: |
              The expression of parent project id of the project.
              The expression format is "\<operator>\<values>". Values should be separated by a pipe "|".
          is_public:
            type: string
            description: |
              The expression of visibility of the project.
              The expression format is "\<operator>\<values>". Values should be separated by a pipe "|".
              Possible values are:
              - `0`: private
              - `1`: public

              examples:
              - public only: `1`
              - public or private: `0|1`
          created_on:
            type: string
            description: |
              The expression of created_on of the project.
              The expression format is "[operator]\<value>".
              examples:
              - last week : `lw`
              - before "2025/7/12": `<=2025-07-12`
          updated_on:
            type: string
            description: |
              The expression of updated_on of the project.
              The expression format is "[operator]\<value>".
              examples:
              - last week : `lw`
              - before "2025/7/12": `<=2025-07-12`
        # custom_fields
        additionalProperties:
          type: string
  requestBody:
    project:
      description: |
        The project to create or update.
      content:
        application/json:
          schema:
            type: object
            properties:
              project:
                $ref: "#/components/schemas/project_new"
      required: true
